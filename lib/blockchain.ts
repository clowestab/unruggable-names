// Generated by @wagmi/cli@0.1.11 on 26/05/2023 at 16:55:39
import {
  useContract,
  UseContractConfig,
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
  useContractEvent,
  UseContractEventConfig,
  useNetwork,
  Address,
} from 'wagmi'
import { ReadContractResult, WriteContractMode, PrepareWriteContractResult } from 'wagmi/actions'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// erc20
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc20ABI = [
  {
    type: 'event',
    inputs: [
      { name: 'owner', type: 'address', indexed: true },
      { name: 'spender', type: 'address', indexed: true },
      { name: 'value', type: 'uint256', indexed: false },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    inputs: [
      { name: 'from', type: 'address', indexed: true },
      { name: 'to', type: 'address', indexed: true },
      { name: 'value', type: 'uint256', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', type: 'address' },
      { name: 'spender', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', type: 'address' },
      { name: 'amount', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', type: 'uint256' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'decimals', outputs: [{ name: '', type: 'uint8' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'name', outputs: [{ name: '', type: 'string' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'symbol', outputs: [{ name: '', type: 'string' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'totalSupply', outputs: [{ name: '', type: 'uint256' }] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'recipient', type: 'address' },
      { name: 'amount', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sender', type: 'address' },
      { name: 'recipient', type: 'address' },
      { name: 'amount', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ENSRegistry
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export const ensRegistryABI = [
  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'label', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'owner', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'NewOwner',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'resolver', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'NewResolver',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'ttl', internalType: 'uint64', type: 'uint64', indexed: false },
    ],
    name: 'NewTTL',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'owner', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'node', internalType: 'bytes32', type: 'bytes32' }],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'node', internalType: 'bytes32', type: 'bytes32' }],
    name: 'recordExists',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'node', internalType: 'bytes32', type: 'bytes32' }],
    name: 'resolver',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32' },
      { name: 'owner', internalType: 'address', type: 'address' },
    ],
    name: 'setOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32' },
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'resolver', internalType: 'address', type: 'address' },
      { name: 'ttl', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'setRecord',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32' },
      { name: 'resolver', internalType: 'address', type: 'address' },
    ],
    name: 'setResolver',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32' },
      { name: 'label', internalType: 'bytes32', type: 'bytes32' },
      { name: 'owner', internalType: 'address', type: 'address' },
    ],
    name: 'setSubnodeOwner',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32' },
      { name: 'label', internalType: 'bytes32', type: 'bytes32' },
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'resolver', internalType: 'address', type: 'address' },
      { name: 'ttl', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'setSubnodeRecord',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32' },
      { name: 'ttl', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'setTTL',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'node', internalType: 'bytes32', type: 'bytes32' }],
    name: 'ttl',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
] as const

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export const ensRegistryAddress = {
  5: '0xba086797534A836Eb05a5E8D777Ea31657EcD935',
  31337: '0x5FbDB2315678afecb367f032d93F642f64180aa3',
} as const

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export const ensRegistryConfig = { address: ensRegistryAddress, abi: ensRegistryABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ETHRegistrarController
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export const ethRegistrarControllerABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: '_base', internalType: 'contract BaseRegistrarImplementation', type: 'address' },
      { name: '_prices', internalType: 'contract IPriceOracle', type: 'address' },
      { name: '_minCommitmentAge', internalType: 'uint256', type: 'uint256' },
      { name: '_maxCommitmentAge', internalType: 'uint256', type: 'uint256' },
      { name: '_reverseRegistrar', internalType: 'contract ReverseRegistrar', type: 'address' },
      { name: '_nameWrapper', internalType: 'contract INameWrapper', type: 'address' },
      { name: '_ens', internalType: 'contract ENS', type: 'address' },
    ],
  },
  { type: 'error', inputs: [{ name: 'commitment', internalType: 'bytes32', type: 'bytes32' }], name: 'CommitmentTooNew' },
  { type: 'error', inputs: [{ name: 'commitment', internalType: 'bytes32', type: 'bytes32' }], name: 'CommitmentTooOld' },
  { type: 'error', inputs: [{ name: 'duration', internalType: 'uint256', type: 'uint256' }], name: 'DurationTooShort' },
  { type: 'error', inputs: [], name: 'InsufficientValue' },
  { type: 'error', inputs: [], name: 'MaxCommitmentAgeTooHigh' },
  { type: 'error', inputs: [], name: 'MaxCommitmentAgeTooLow' },
  { type: 'error', inputs: [{ name: 'name', internalType: 'string', type: 'string' }], name: 'NameNotAvailable' },
  { type: 'error', inputs: [], name: 'ResolverRequiredWhenDataSupplied' },
  { type: 'error', inputs: [{ name: 'commitment', internalType: 'bytes32', type: 'bytes32' }], name: 'UnexpiredCommitmentExists' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'name', internalType: 'string', type: 'string', indexed: false },
      { name: 'label', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'baseCost', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'premium', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'expires', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'NameRegistered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'name', internalType: 'string', type: 'string', indexed: false },
      { name: 'label', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'cost', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'expires', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'NameRenewed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MIN_REGISTRATION_DURATION',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'name', internalType: 'string', type: 'string' }],
    name: 'available',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'commitment', internalType: 'bytes32', type: 'bytes32' }],
    name: 'commit',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    name: 'commitments',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'duration', internalType: 'uint256', type: 'uint256' },
      { name: 'secret', internalType: 'bytes32', type: 'bytes32' },
      { name: 'resolver', internalType: 'address', type: 'address' },
      { name: 'data', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'reverseRecord', internalType: 'bool', type: 'bool' },
      { name: 'ownerControlledFuses', internalType: 'uint16', type: 'uint16' },
    ],
    name: 'makeCommitment',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'maxCommitmentAge',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minCommitmentAge',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nameWrapper',
    outputs: [{ name: '', internalType: 'contract INameWrapper', type: 'address' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'owner', outputs: [{ name: '', internalType: 'address', type: 'address' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'prices',
    outputs: [{ name: '', internalType: 'contract IPriceOracle', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_token', internalType: 'address', type: 'address' },
      { name: '_to', internalType: 'address', type: 'address' },
      { name: '_amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'recoverFunds',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'duration', internalType: 'uint256', type: 'uint256' },
      { name: 'secret', internalType: 'bytes32', type: 'bytes32' },
      { name: 'resolver', internalType: 'address', type: 'address' },
      { name: 'data', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'reverseRecord', internalType: 'bool', type: 'bool' },
      { name: 'ownerControlledFuses', internalType: 'uint16', type: 'uint16' },
    ],
    name: 'register',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'duration', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'renew',
    outputs: [],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'duration', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'rentPrice',
    outputs: [
      {
        name: 'price',
        internalType: 'struct IPriceOracle.Price',
        type: 'tuple',
        components: [
          { name: 'base', internalType: 'uint256', type: 'uint256' },
          { name: 'premium', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'reverseRegistrar',
    outputs: [{ name: '', internalType: 'contract ReverseRegistrar', type: 'address' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'interfaceID', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'name', internalType: 'string', type: 'string' }],
    name: 'valid',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'withdraw', outputs: [] },
] as const

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export const ethRegistrarControllerAddress = {
  5: '0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57',
  31337: '0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1',
} as const

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export const ethRegistrarControllerConfig = { address: ethRegistrarControllerAddress, abi: ethRegistrarControllerABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// NameWrapper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export const nameWrapperABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: '_ens', internalType: 'contract ENS', type: 'address' },
      { name: '_registrar', internalType: 'contract IBaseRegistrar', type: 'address' },
      { name: '_metadataService', internalType: 'contract IMetadataService', type: 'address' },
    ],
  },
  { type: 'error', inputs: [], name: 'CannotUpgrade' },
  { type: 'error', inputs: [], name: 'IncompatibleParent' },
  { type: 'error', inputs: [{ name: 'owner', internalType: 'address', type: 'address' }], name: 'IncorrectTargetOwner' },
  { type: 'error', inputs: [], name: 'IncorrectTokenType' },
  {
    type: 'error',
    inputs: [
      { name: 'labelHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'expectedLabelhash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'LabelMismatch',
  },
  { type: 'error', inputs: [{ name: 'label', internalType: 'string', type: 'string' }], name: 'LabelTooLong' },
  { type: 'error', inputs: [], name: 'LabelTooShort' },
  { type: 'error', inputs: [], name: 'NameIsNotWrapped' },
  { type: 'error', inputs: [{ name: 'node', internalType: 'bytes32', type: 'bytes32' }], name: 'OperationProhibited' },
  {
    type: 'error',
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32' },
      { name: 'addr', internalType: 'address', type: 'address' },
    ],
    name: 'Unauthorised',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'address', type: 'address', indexed: true },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'controller', internalType: 'address', type: 'address', indexed: true },
      { name: 'active', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ControllerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'expiry', internalType: 'uint64', type: 'uint64', indexed: false },
    ],
    name: 'ExpiryExtended',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'fuses', internalType: 'uint32', type: 'uint32', indexed: false },
    ],
    name: 'FusesSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'owner', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'NameUnwrapped',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'name', internalType: 'bytes', type: 'bytes', indexed: false },
      { name: 'owner', internalType: 'address', type: 'address', indexed: false },
      { name: 'fuses', internalType: 'uint32', type: 'uint32', indexed: false },
      { name: 'expiry', internalType: 'uint64', type: 'uint64', indexed: false },
    ],
    name: 'NameWrapped',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
    ],
    name: 'TransferBatch',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'TransferSingle',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'value', internalType: 'string', type: 'string', indexed: false },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'URI',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: '_tokens',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32' },
      { name: 'fuseMask', internalType: 'uint32', type: 'uint32' },
    ],
    name: 'allFusesBurned',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accounts', internalType: 'address[]', type: 'address[]' },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'balanceOfBatch',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32' },
      { name: 'addr', internalType: 'address', type: 'address' },
    ],
    name: 'canExtendSubnames',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32' },
      { name: 'addr', internalType: 'address', type: 'address' },
    ],
    name: 'canModifyName',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'controllers',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'ens', outputs: [{ name: '', internalType: 'contract ENS', type: 'address' }] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'parentNode', internalType: 'bytes32', type: 'bytes32' },
      { name: 'labelhash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'expiry', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'extendExpiry',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: 'operator', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'getData',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'fuses', internalType: 'uint32', type: 'uint32' },
      { name: 'expiry', internalType: 'uint64', type: 'uint64' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'parentNode', internalType: 'bytes32', type: 'bytes32' },
      { name: 'labelhash', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'isWrapped',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'node', internalType: 'bytes32', type: 'bytes32' }],
    name: 'isWrapped',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'metadataService',
    outputs: [{ name: '', internalType: 'contract IMetadataService', type: 'address' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'name', outputs: [{ name: '', internalType: 'string', type: 'string' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    name: 'names',
    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'onERC721Received',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'owner', outputs: [{ name: '', internalType: 'address', type: 'address' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_token', internalType: 'address', type: 'address' },
      { name: '_to', internalType: 'address', type: 'address' },
      { name: '_amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'recoverFunds',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'label', internalType: 'string', type: 'string' },
      { name: 'wrappedOwner', internalType: 'address', type: 'address' },
      { name: 'duration', internalType: 'uint256', type: 'uint256' },
      { name: 'resolver', internalType: 'address', type: 'address' },
      { name: 'ownerControlledFuses', internalType: 'uint16', type: 'uint16' },
    ],
    name: 'registerAndWrapETH2LD',
    outputs: [{ name: 'registrarExpiry', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registrar',
    outputs: [{ name: '', internalType: 'contract IBaseRegistrar', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'duration', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'renew',
    outputs: [{ name: 'expires', internalType: 'uint256', type: 'uint256' }],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'amounts', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeBatchTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'parentNode', internalType: 'bytes32', type: 'bytes32' },
      { name: 'labelhash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'fuses', internalType: 'uint32', type: 'uint32' },
      { name: 'expiry', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'setChildFuses',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'controller', internalType: 'address', type: 'address' },
      { name: 'active', internalType: 'bool', type: 'bool' },
    ],
    name: 'setController',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32' },
      { name: 'ownerControlledFuses', internalType: 'uint16', type: 'uint16' },
    ],
    name: 'setFuses',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_metadataService', internalType: 'contract IMetadataService', type: 'address' }],
    name: 'setMetadataService',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32' },
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'resolver', internalType: 'address', type: 'address' },
      { name: 'ttl', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'setRecord',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32' },
      { name: 'resolver', internalType: 'address', type: 'address' },
    ],
    name: 'setResolver',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'parentNode', internalType: 'bytes32', type: 'bytes32' },
      { name: 'label', internalType: 'string', type: 'string' },
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'fuses', internalType: 'uint32', type: 'uint32' },
      { name: 'expiry', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'setSubnodeOwner',
    outputs: [{ name: 'node', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'parentNode', internalType: 'bytes32', type: 'bytes32' },
      { name: 'label', internalType: 'string', type: 'string' },
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'resolver', internalType: 'address', type: 'address' },
      { name: 'ttl', internalType: 'uint64', type: 'uint64' },
      { name: 'fuses', internalType: 'uint32', type: 'uint32' },
      { name: 'expiry', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'setSubnodeRecord',
    outputs: [{ name: 'node', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32' },
      { name: 'ttl', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'setTTL',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_upgradeAddress', internalType: 'contract INameWrapperUpgrade', type: 'address' }],
    name: 'setUpgradeContract',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'parentNode', internalType: 'bytes32', type: 'bytes32' },
      { name: 'labelhash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'controller', internalType: 'address', type: 'address' },
    ],
    name: 'unwrap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'labelhash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'registrant', internalType: 'address', type: 'address' },
      { name: 'controller', internalType: 'address', type: 'address' },
    ],
    name: 'unwrapETH2LD',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'bytes', type: 'bytes' },
      { name: 'extraData', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'upgrade',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'upgradeContract',
    outputs: [{ name: '', internalType: 'contract INameWrapperUpgrade', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'uri',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'bytes', type: 'bytes' },
      { name: 'wrappedOwner', internalType: 'address', type: 'address' },
      { name: 'resolver', internalType: 'address', type: 'address' },
    ],
    name: 'wrap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'label', internalType: 'string', type: 'string' },
      { name: 'wrappedOwner', internalType: 'address', type: 'address' },
      { name: 'ownerControlledFuses', internalType: 'uint16', type: 'uint16' },
      { name: 'resolver', internalType: 'address', type: 'address' },
    ],
    name: 'wrapETH2LD',
    outputs: [{ name: 'expiry', internalType: 'uint64', type: 'uint64' }],
  },
] as const

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export const nameWrapperAddress = {
  5: '0x709f9958541FD5E699149572D3675ed86585DEAD',
  31337: '0x8A791620dd6260079BF849Dc5567aDC3F2FdC318',
} as const

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export const nameWrapperConfig = { address: nameWrapperAddress, abi: nameWrapperABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RenewalController
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export const renewalControllerABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '_ens', internalType: 'contract ENS', type: 'address' },
      { name: '_nameWrapper', internalType: 'contract INameWrapper', type: 'address' },
      { name: '_subnameWrapper', internalType: 'contract ISubnameWrapper', type: 'address' },
      { name: '_usdOracle', internalType: 'contract IAggregatorInterface', type: 'address' },
    ],
  },
  { type: 'error', inputs: [], name: 'CannotSetNewCharLengthAmount' },
  { type: 'error', inputs: [], name: 'InsufficientValue_RC' },
  { type: 'error', inputs: [{ name: 'node', internalType: 'bytes32', type: 'bytes32' }], name: 'UnauthorizedAddress_RC' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: '_address', internalType: 'address', type: 'address', indexed: true },
      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'AddressWithdrew',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'charAmounts', internalType: 'uint256[]', type: 'uint256[]', indexed: true }],
    name: 'CharPricesUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'name', internalType: 'bytes', type: 'bytes', indexed: true },
      { name: 'cost', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'expires', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'NameRenewed',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'NameWrapperVersionUpdated' },
  { type: 'event', anonymous: false, inputs: [{ name: 'ownerCut', internalType: 'uint256', type: 'uint256', indexed: true }], name: 'OwnerCutSet' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'index', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'PriceForCharLengthUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'referrerCut', internalType: 'uint256', type: 'uint256', indexed: true }],
    name: 'ReferrerCutSet',
  },
  { type: 'event', anonymous: false, inputs: [], name: 'SubnameWrapperVersionUpdated' },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_nameWrapper', internalType: 'contract INameWrapper', type: 'address' }],
    name: 'addNextNameWrapperVersion',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],
    name: 'addNextPriceForCharLength',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_subnameWrapper', internalType: 'contract ISubnameWrapper', type: 'address' }],
    name: 'addNextSubnameWrapperVersion',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'balances',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'charAmounts',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'ens', outputs: [{ name: '', internalType: 'contract ENS', type: 'address' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getLastCharIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nameWrapperVersion',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'nameWrappers',
    outputs: [{ name: '', internalType: 'contract INameWrapper', type: 'address' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'owner', outputs: [{ name: '', internalType: 'address', type: 'address' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'ownerCut', outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_token', internalType: 'address', type: 'address' },
      { name: '_to', internalType: 'address', type: 'address' },
      { name: '_amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'recoverFunds',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'referrerCuts',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'bytes', type: 'bytes' },
      { name: 'referrer', internalType: 'address', type: 'address' },
      { name: 'duration', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'renew',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'nameWrapperVersion', internalType: 'uint256', type: 'uint256' },
      { name: 'subnameWrapperVersion', internalType: 'uint256', type: 'uint256' },
      { name: 'name', internalType: 'bytes', type: 'bytes' },
      { name: 'referrer', internalType: 'address', type: 'address' },
      { name: 'duration', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'renewWithVersions',
    outputs: [],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'bytes', type: 'bytes' },
      { name: 'duration', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'rentPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_ownerCut', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwnerCut',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_charAmounts', internalType: 'uint256[]', type: 'uint256[]' }],
    name: 'setPricingForAllLengths',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_referrerCut', internalType: 'uint256', type: 'uint256' }],
    name: 'setReferrerCut',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'subnameWrapperVersion',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'subnameWrappers',
    outputs: [{ name: '', internalType: 'contract ISubnameWrapper', type: 'address' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'totalBalance', outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'charLength', internalType: 'uint16', type: 'uint16' },
      { name: 'charAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updatePriceForCharLength',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'usdOracle',
    outputs: [{ name: '', internalType: 'contract IAggregatorInterface', type: 'address' }],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'withdraw', outputs: [] },
] as const

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export const renewalControllerAddress = {
  5: '0xa326d1117Eb5F83126589eD5683c2Ec45d75d352',
  31337: '0x0B306BF915C4d645ff596e518fAf3F9669b97016',
} as const

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export const renewalControllerConfig = { address: renewalControllerAddress, abi: renewalControllerABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SubnameRegistrar
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export const subnameRegistrarABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: '_minCommitmentAge', internalType: 'uint256', type: 'uint256' },
      { name: '_maxCommitmentAge', internalType: 'uint256', type: 'uint256' },
      { name: '_ens', internalType: 'contract ENS', type: 'address' },
      { name: '_nameWrapper', internalType: 'contract INameWrapper', type: 'address' },
      { name: '_subnameWrapper', internalType: 'contract ISubnameWrapper', type: 'address' },
      { name: '_usdOracle', internalType: 'contract IAggregatorInterface', type: 'address' },
    ],
  },
  { type: 'error', inputs: [], name: 'CannotSetNewCharLengthAmounts' },
  { type: 'error', inputs: [{ name: 'commitment', internalType: 'bytes32', type: 'bytes32' }], name: 'CommitmentTooNew' },
  { type: 'error', inputs: [{ name: 'commitment', internalType: 'bytes32', type: 'bytes32' }], name: 'CommitmentTooOld' },
  { type: 'error', inputs: [{ name: 'duration', internalType: 'uint256', type: 'uint256' }], name: 'DurationTooShort' },
  { type: 'error', inputs: [], name: 'InsufficientValue' },
  { type: 'error', inputs: [], name: 'MaxCommitmentAgeTooHigh' },
  { type: 'error', inputs: [], name: 'MaxCommitmentAgeTooLow' },
  { type: 'error', inputs: [{ name: 'name', internalType: 'bytes', type: 'bytes' }], name: 'NameNotAvailable' },
  { type: 'error', inputs: [{ name: 'node', internalType: 'bytes32', type: 'bytes32' }], name: 'UnauthorizedAddress' },
  { type: 'error', inputs: [{ name: 'commitment', internalType: 'bytes32', type: 'bytes32' }], name: 'UnexpiredCommitmentExists' },
  { type: 'error', inputs: [{ name: 'label', internalType: 'string', type: 'string' }], name: 'WrongNumberOfChars' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: '_address', internalType: 'address', type: 'address', indexed: true },
      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'AddressWithdrew',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'name', internalType: 'bytes', type: 'bytes', indexed: true },
      { name: 'cost', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'expires', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'NameRenewed',
  },
  { type: 'event', anonymous: false, inputs: [{ name: 'ownerCut', internalType: 'uint256', type: 'uint256', indexed: true }], name: 'OwnerCutSet' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'referrerCut', internalType: 'uint256', type: 'uint256', indexed: true }],
    name: 'ReferrerCutSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'name', internalType: 'bytes', type: 'bytes', indexed: false },
      { name: 'node', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'price', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'expires', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'SubnameRegistered',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MIN_REGISTRATION_DURATION',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'parentNode', internalType: 'bytes32', type: 'bytes32' },
      { name: 'charAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addNextPriceForCharLength',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'name', internalType: 'bytes', type: 'bytes' }],
    name: 'available',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'balances',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'commitment', internalType: 'bytes32', type: 'bytes32' }],
    name: 'commit',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    name: 'commitments',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'ens', outputs: [{ name: '', internalType: 'contract ENS', type: 'address' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'parentNode', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getLastCharIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'parentNode', internalType: 'bytes32', type: 'bytes32' },
      { name: 'charLength', internalType: 'uint16', type: 'uint16' },
    ],
    name: 'getPriceDataForLength',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'bytes', type: 'bytes' },
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'secret', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'makeCommitment',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'maxCommitmentAge',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minCommitmentAge',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nameWrapper',
    outputs: [{ name: '', internalType: 'contract INameWrapper', type: 'address' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'owner', outputs: [{ name: '', internalType: 'address', type: 'address' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'ownerCut', outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    name: 'pricingData',
    outputs: [
      { name: 'offerSubnames', internalType: 'bool', type: 'bool' },
      { name: 'renewalController', internalType: 'contract IRenewalController', type: 'address' },
      { name: 'minRegistrationDuration', internalType: 'uint16', type: 'uint16' },
      { name: 'minChars', internalType: 'uint16', type: 'uint16' },
      { name: 'maxChars', internalType: 'uint16', type: 'uint16' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_token', internalType: 'address', type: 'address' },
      { name: '_to', internalType: 'address', type: 'address' },
      { name: '_amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'recoverFunds',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'referrerCuts',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'bytes', type: 'bytes' },
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'referrer', internalType: 'address', type: 'address' },
      { name: 'duration', internalType: 'uint256', type: 'uint256' },
      { name: 'secret', internalType: 'bytes32', type: 'bytes32' },
      { name: 'resolver', internalType: 'address', type: 'address' },
      { name: 'data', internalType: 'bytes[]', type: 'bytes[]' },
      { name: 'fuses', internalType: 'uint32', type: 'uint32' },
    ],
    name: 'register',
    outputs: [],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'bytes', type: 'bytes' },
      { name: 'duration', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'rentPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'parentNode', internalType: 'bytes32', type: 'bytes32' },
      { name: '_offerSubnames', internalType: 'bool', type: 'bool' },
    ],
    name: 'setOfferSubnames',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_ownerCut', internalType: 'uint256', type: 'uint256' }],
    name: 'setOwnerCut',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'parentNode', internalType: 'bytes32', type: 'bytes32' },
      { name: '_offerSubnames', internalType: 'bool', type: 'bool' },
      { name: '_renewalController', internalType: 'contract IRenewalController', type: 'address' },
      { name: '_minRegistrationDuration', internalType: 'uint16', type: 'uint16' },
      { name: '_minChars', internalType: 'uint16', type: 'uint16' },
      { name: '_maxChars', internalType: 'uint16', type: 'uint16' },
    ],
    name: 'setParams',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'parentNode', internalType: 'bytes32', type: 'bytes32' },
      { name: '_charAmounts', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'setPricingForAllLengths',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_referrerCut', internalType: 'uint256', type: 'uint256' }],
    name: 'setReferrerCut',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'subnameWrapper',
    outputs: [{ name: '', internalType: 'contract ISubnameWrapper', type: 'address' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'totalBalance', outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'parentNode', internalType: 'bytes32', type: 'bytes32' },
      { name: 'charLength', internalType: 'uint16', type: 'uint16' },
      { name: 'charAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updatePriceForCharLength',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'usdOracle',
    outputs: [{ name: '', internalType: 'contract IAggregatorInterface', type: 'address' }],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'withdraw', outputs: [] },
] as const

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export const subnameRegistrarAddress = {
  5: '0xbbf178EF94694d18DCabD5EBc2E1D4152f96B110',
  31337: '0x9A676e781A523b5d0C0e43731313A708CB607508',
} as const

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export const subnameRegistrarConfig = { address: subnameRegistrarAddress, abi: subnameRegistrarABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SubnameWrapper
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export const subnameWrapperABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: '_ens', internalType: 'contract ENS', type: 'address' },
      { name: '_metadataService', internalType: 'contract IMetadataService', type: 'address' },
      { name: '_nameWrapper', internalType: 'contract INameWrapper', type: 'address' },
      { name: '_publicResolver', internalType: 'contract Resolver', type: 'address' },
    ],
  },
  { type: 'error', inputs: [], name: 'CannotBeADotEth2LD' },
  { type: 'error', inputs: [], name: 'CannotUpgradeName' },
  { type: 'error', inputs: [], name: 'FusesNotBurned' },
  { type: 'error', inputs: [], name: 'NameMustBeWrappedInNameWrapper' },
  { type: 'error', inputs: [], name: 'OwnerCannotBeSetToZeroAddress' },
  {
    type: 'error',
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32' },
      { name: 'addr', internalType: 'address', type: 'address' },
    ],
    name: 'UnauthorizedSender',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'controller', internalType: 'address', type: 'address', indexed: true },
      { name: 'active', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ControllerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32', indexed: false },
      { name: 'delegate', internalType: 'address', type: 'address', indexed: false },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'DelegationSetInPublicResolver',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32', indexed: false },
      { name: 'expiry', internalType: 'uint64', type: 'uint64', indexed: false },
    ],
    name: 'ExtendExpiry',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'name', internalType: 'bytes', type: 'bytes', indexed: false },
      { name: 'owner', internalType: 'address', type: 'address', indexed: false },
      { name: 'renewalController', internalType: 'contract IRenewalController', type: 'address', indexed: false },
      { name: 'expiry', internalType: 'uint64', type: 'uint64', indexed: false },
    ],
    name: 'SubnameWrapped',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
    ],
    name: 'TransferBatch',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'TransferSingle',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'value', internalType: 'string', type: 'string', indexed: false },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'URI',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: '_tokens',
    outputs: [
      { name: '_owner', internalType: 'address', type: 'address' },
      { name: '_expiry', internalType: 'uint64', type: 'uint64' },
      { name: '_renewalController', internalType: 'contract IRenewalController', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accounts', internalType: 'address[]', type: 'address[]' },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'balanceOfBatch',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32' },
      { name: 'addr', internalType: 'address', type: 'address' },
    ],
    name: 'canModifyName',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'controllers',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'ens', outputs: [{ name: '', internalType: 'contract ENS', type: 'address' }] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'parentNode', internalType: 'bytes32', type: 'bytes32' },
      { name: 'labelhash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'expiry', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'extendExpiry',
    outputs: [{ name: 'expiryNormalised', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getData',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'renewalController', internalType: 'contract IRenewalController', type: 'address' },
      { name: 'expiry', internalType: 'uint64', type: 'uint64' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'node', internalType: 'bytes32', type: 'bytes32' }],
    name: 'isWrapped',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'metadataService',
    outputs: [{ name: '', internalType: 'contract IMetadataService', type: 'address' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'name', outputs: [{ name: '', internalType: 'string', type: 'string' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nameWrapper',
    outputs: [{ name: '', internalType: 'contract INameWrapper', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'onERC1155BatchReceived',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'onERC1155Received',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'owner', outputs: [{ name: '', internalType: 'address', type: 'address' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'id', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'publicResolver',
    outputs: [{ name: '', internalType: 'contract Resolver', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_token', internalType: 'address', type: 'address' },
      { name: '_to', internalType: 'address', type: 'address' },
      { name: '_amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'recoverFunds',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_name', internalType: 'bytes', type: 'bytes' },
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'resolver', internalType: 'address', type: 'address' },
      { name: 'fuses', internalType: 'uint32', type: 'uint32' },
      { name: 'expiry', internalType: 'uint64', type: 'uint64' },
      { name: 'renewalController', internalType: 'contract IRenewalController', type: 'address' },
    ],
    name: 'registerAndWrap',
    outputs: [{ name: 'node', internalType: 'bytes32', type: 'bytes32' }],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'amounts', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeBatchTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'parentNode', internalType: 'bytes32', type: 'bytes32' },
      { name: 'labelhash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'fuses', internalType: 'uint32', type: 'uint32' },
      { name: 'expiry', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'setChildFuses',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'controller', internalType: 'address', type: 'address' },
      { name: 'active', internalType: 'bool', type: 'bool' },
    ],
    name: 'setController',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32' },
      { name: 'delegate', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setDelegateInPublicResolver',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32' },
      { name: 'ownerControlledFuses', internalType: 'uint16', type: 'uint16' },
    ],
    name: 'setFuses',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_metadataService', internalType: 'contract IMetadataService', type: 'address' }],
    name: 'setMetadataService',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_resolver', internalType: 'contract Resolver', type: 'address' }],
    name: 'setPublicResolver',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32' },
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'resolver', internalType: 'address', type: 'address' },
      { name: 'ttl', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'setRecord',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32' },
      { name: 'resolver', internalType: 'address', type: 'address' },
    ],
    name: 'setResolver',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'parentNode', internalType: 'bytes32', type: 'bytes32' },
      { name: 'label', internalType: 'string', type: 'string' },
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'fuses', internalType: 'uint32', type: 'uint32' },
      { name: 'expiry', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'setSubnodeOwner',
    outputs: [{ name: 'node', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'parentNode', internalType: 'bytes32', type: 'bytes32' },
      { name: 'label', internalType: 'string', type: 'string' },
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'resolver', internalType: 'address', type: 'address' },
      { name: 'ttl', internalType: 'uint64', type: 'uint64' },
      { name: 'fuses', internalType: 'uint32', type: 'uint32' },
      { name: 'expiry', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'setSubnodeRecord',
    outputs: [{ name: 'node', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'node', internalType: 'bytes32', type: 'bytes32' },
      { name: 'ttl', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'setTTL',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_upgradeAddress', internalType: 'contract ISubnameWrapperUpgrade', type: 'address' }],
    name: 'setUpgradeContract',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_name', internalType: 'bytes', type: 'bytes' }],
    name: 'upgrade',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'upgradeContract',
    outputs: [{ name: '', internalType: 'contract ISubnameWrapperUpgrade', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'uri',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_name', internalType: 'bytes', type: 'bytes' },
      { name: 'renewalController', internalType: 'contract IRenewalController', type: 'address' },
    ],
    name: 'wrap',
    outputs: [],
  },
] as const

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export const subnameWrapperAddress = {
  5: '0x467e32AF4BA47CcC47ac383922E41EF725Dad37B',
  31337: '0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82',
} as const

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export const subnameWrapperConfig = { address: subnameWrapperAddress, abi: subnameWrapperABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20(config: Omit<UseContractConfig, 'abi'> = {} as any) {
  return useContract({ abi: erc20ABI, ...config })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20Read<TFunctionName extends string, TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>, 'abi'> = {} as any
) {
  return useContractRead({ abi: erc20ABI, ...config } as UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"allowance"`.
 */
export function useErc20Allowance<TSelectData = ReadContractResult<typeof erc20ABI, 'allowance'>>(
  config: Omit<UseContractReadConfig<typeof erc20ABI, 'allowance', TSelectData>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: erc20ABI, functionName: 'allowance', ...config } as UseContractReadConfig<typeof erc20ABI, 'allowance', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useErc20BalanceOf<TSelectData = ReadContractResult<typeof erc20ABI, 'balanceOf'>>(
  config: Omit<UseContractReadConfig<typeof erc20ABI, 'balanceOf', TSelectData>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: erc20ABI, functionName: 'balanceOf', ...config } as UseContractReadConfig<typeof erc20ABI, 'balanceOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"decimals"`.
 */
export function useErc20Decimals<TSelectData = ReadContractResult<typeof erc20ABI, 'decimals'>>(
  config: Omit<UseContractReadConfig<typeof erc20ABI, 'decimals', TSelectData>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: erc20ABI, functionName: 'decimals', ...config } as UseContractReadConfig<typeof erc20ABI, 'decimals', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"name"`.
 */
export function useErc20Name<TSelectData = ReadContractResult<typeof erc20ABI, 'name'>>(
  config: Omit<UseContractReadConfig<typeof erc20ABI, 'name', TSelectData>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: erc20ABI, functionName: 'name', ...config } as UseContractReadConfig<typeof erc20ABI, 'name', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"symbol"`.
 */
export function useErc20Symbol<TSelectData = ReadContractResult<typeof erc20ABI, 'symbol'>>(
  config: Omit<UseContractReadConfig<typeof erc20ABI, 'symbol', TSelectData>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: erc20ABI, functionName: 'symbol', ...config } as UseContractReadConfig<typeof erc20ABI, 'symbol', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useErc20TotalSupply<TSelectData = ReadContractResult<typeof erc20ABI, 'totalSupply'>>(
  config: Omit<UseContractReadConfig<typeof erc20ABI, 'totalSupply', TSelectData>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: erc20ABI, functionName: 'totalSupply', ...config } as UseContractReadConfig<
    typeof erc20ABI,
    'totalSupply',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20Write<TMode extends WriteContractMode, TFunctionName extends string>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof erc20ABI, string>['abi'], TFunctionName>
    : UseContractWriteConfig<TMode, typeof erc20ABI, TFunctionName> & {
        abi?: never
      } = {} as any
) {
  return useContractWrite<TMode, typeof erc20ABI, TFunctionName>({ abi: erc20ABI, ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"approve"`.
 */
export function useErc20Approve<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof erc20ABI, 'approve'>['abi'], 'approve'> & { functionName?: 'approve' }
    : UseContractWriteConfig<TMode, typeof erc20ABI, 'approve'> & {
        abi?: never
        functionName?: 'approve'
      } = {} as any
) {
  return useContractWrite<TMode, typeof erc20ABI, 'approve'>({ abi: erc20ABI, functionName: 'approve', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transfer"`.
 */
export function useErc20Transfer<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof erc20ABI, 'transfer'>['abi'], 'transfer'> & { functionName?: 'transfer' }
    : UseContractWriteConfig<TMode, typeof erc20ABI, 'transfer'> & {
        abi?: never
        functionName?: 'transfer'
      } = {} as any
) {
  return useContractWrite<TMode, typeof erc20ABI, 'transfer'>({ abi: erc20ABI, functionName: 'transfer', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useErc20TransferFrom<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof erc20ABI, 'transferFrom'>['abi'], 'transferFrom'> & {
        functionName?: 'transferFrom'
      }
    : UseContractWriteConfig<TMode, typeof erc20ABI, 'transferFrom'> & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any
) {
  return useContractWrite<TMode, typeof erc20ABI, 'transferFrom'>({ abi: erc20ABI, functionName: 'transferFrom', ...config } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__.
 */
export function usePrepareErc20Write<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof erc20ABI, TFunctionName>, 'abi'> = {} as any
) {
  return usePrepareContractWrite({ abi: erc20ABI, ...config } as UsePrepareContractWriteConfig<typeof erc20ABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareErc20Approve(config: Omit<UsePrepareContractWriteConfig<typeof erc20ABI, 'approve'>, 'abi' | 'functionName'> = {} as any) {
  return usePrepareContractWrite({ abi: erc20ABI, functionName: 'approve', ...config } as UsePrepareContractWriteConfig<typeof erc20ABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareErc20Transfer(
  config: Omit<UsePrepareContractWriteConfig<typeof erc20ABI, 'transfer'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: erc20ABI, functionName: 'transfer', ...config } as UsePrepareContractWriteConfig<typeof erc20ABI, 'transfer'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareErc20TransferFrom(
  config: Omit<UsePrepareContractWriteConfig<typeof erc20ABI, 'transferFrom'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: erc20ABI, functionName: 'transferFrom', ...config } as UsePrepareContractWriteConfig<
    typeof erc20ABI,
    'transferFrom'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20Event<TEventName extends string>(config: Omit<UseContractEventConfig<typeof erc20ABI, TEventName>, 'abi'> = {} as any) {
  return useContractEvent({ abi: erc20ABI, ...config } as UseContractEventConfig<typeof erc20ABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__ and `eventName` set to `"Approval"`.
 */
export function useErc20ApprovalEvent(config: Omit<UseContractEventConfig<typeof erc20ABI, 'Approval'>, 'abi' | 'eventName'> = {} as any) {
  return useContractEvent({ abi: erc20ABI, eventName: 'Approval', ...config } as UseContractEventConfig<typeof erc20ABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__ and `eventName` set to `"Transfer"`.
 */
export function useErc20TransferEvent(config: Omit<UseContractEventConfig<typeof erc20ABI, 'Transfer'>, 'abi' | 'eventName'> = {} as any) {
  return useContractEvent({ abi: erc20ABI, eventName: 'Transfer', ...config } as UseContractEventConfig<typeof erc20ABI, 'Transfer'>)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link ensRegistryABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function useEnsRegistry(config: Omit<UseContractConfig, 'abi' | 'address'> & { chainId?: keyof typeof ensRegistryAddress } = {} as any) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContract({ abi: ensRegistryABI, address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress], ...config })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ensRegistryABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function useEnsRegistryRead<TFunctionName extends string, TSelectData = ReadContractResult<typeof ensRegistryABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof ensRegistryABI, TFunctionName, TSelectData>, 'abi' | 'address'> & {
    chainId?: keyof typeof ensRegistryAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    ...config,
  } as UseContractReadConfig<typeof ensRegistryABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function useEnsRegistryIsApprovedForAll<TSelectData = ReadContractResult<typeof ensRegistryABI, 'isApprovedForAll'>>(
  config: Omit<UseContractReadConfig<typeof ensRegistryABI, 'isApprovedForAll', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ensRegistryAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<typeof ensRegistryABI, 'isApprovedForAll', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"owner"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function useEnsRegistryOwner<TSelectData = ReadContractResult<typeof ensRegistryABI, 'owner'>>(
  config: Omit<UseContractReadConfig<typeof ensRegistryABI, 'owner', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ensRegistryAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof ensRegistryABI, 'owner', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"recordExists"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function useEnsRegistryRecordExists<TSelectData = ReadContractResult<typeof ensRegistryABI, 'recordExists'>>(
  config: Omit<UseContractReadConfig<typeof ensRegistryABI, 'recordExists', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ensRegistryAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    functionName: 'recordExists',
    ...config,
  } as UseContractReadConfig<typeof ensRegistryABI, 'recordExists', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"resolver"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function useEnsRegistryResolver<TSelectData = ReadContractResult<typeof ensRegistryABI, 'resolver'>>(
  config: Omit<UseContractReadConfig<typeof ensRegistryABI, 'resolver', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ensRegistryAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    functionName: 'resolver',
    ...config,
  } as UseContractReadConfig<typeof ensRegistryABI, 'resolver', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"ttl"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function useEnsRegistryTtl<TSelectData = ReadContractResult<typeof ensRegistryABI, 'ttl'>>(
  config: Omit<UseContractReadConfig<typeof ensRegistryABI, 'ttl', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ensRegistryAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    functionName: 'ttl',
    ...config,
  } as UseContractReadConfig<typeof ensRegistryABI, 'ttl', TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function useEnsRegistryWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof ensRegistryAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof ensRegistryABI, string>['abi'], TFunctionName> & {
        address?: Address
        chainId?: TChainId
      }
    : UseContractWriteConfig<TMode, typeof ensRegistryABI, TFunctionName> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof ensRegistryABI, TFunctionName>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function useEnsRegistrySetApprovalForAll<TMode extends WriteContractMode, TChainId extends number = keyof typeof ensRegistryAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof ensRegistryABI, 'setApprovalForAll'>['abi'], 'setApprovalForAll'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      }
    : UseContractWriteConfig<TMode, typeof ensRegistryABI, 'setApprovalForAll'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof ensRegistryABI, 'setApprovalForAll'>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"setOwner"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function useEnsRegistrySetOwner<TMode extends WriteContractMode, TChainId extends number = keyof typeof ensRegistryAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof ensRegistryABI, 'setOwner'>['abi'], 'setOwner'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setOwner'
      }
    : UseContractWriteConfig<TMode, typeof ensRegistryABI, 'setOwner'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setOwner'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof ensRegistryABI, 'setOwner'>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    functionName: 'setOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"setRecord"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function useEnsRegistrySetRecord<TMode extends WriteContractMode, TChainId extends number = keyof typeof ensRegistryAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof ensRegistryABI, 'setRecord'>['abi'], 'setRecord'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setRecord'
      }
    : UseContractWriteConfig<TMode, typeof ensRegistryABI, 'setRecord'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setRecord'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof ensRegistryABI, 'setRecord'>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    functionName: 'setRecord',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"setResolver"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function useEnsRegistrySetResolver<TMode extends WriteContractMode, TChainId extends number = keyof typeof ensRegistryAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof ensRegistryABI, 'setResolver'>['abi'], 'setResolver'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setResolver'
      }
    : UseContractWriteConfig<TMode, typeof ensRegistryABI, 'setResolver'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setResolver'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof ensRegistryABI, 'setResolver'>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    functionName: 'setResolver',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"setSubnodeOwner"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function useEnsRegistrySetSubnodeOwner<TMode extends WriteContractMode, TChainId extends number = keyof typeof ensRegistryAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof ensRegistryABI, 'setSubnodeOwner'>['abi'], 'setSubnodeOwner'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setSubnodeOwner'
      }
    : UseContractWriteConfig<TMode, typeof ensRegistryABI, 'setSubnodeOwner'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setSubnodeOwner'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof ensRegistryABI, 'setSubnodeOwner'>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    functionName: 'setSubnodeOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"setSubnodeRecord"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function useEnsRegistrySetSubnodeRecord<TMode extends WriteContractMode, TChainId extends number = keyof typeof ensRegistryAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof ensRegistryABI, 'setSubnodeRecord'>['abi'], 'setSubnodeRecord'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setSubnodeRecord'
      }
    : UseContractWriteConfig<TMode, typeof ensRegistryABI, 'setSubnodeRecord'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setSubnodeRecord'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof ensRegistryABI, 'setSubnodeRecord'>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    functionName: 'setSubnodeRecord',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"setTTL"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function useEnsRegistrySetTtl<TMode extends WriteContractMode, TChainId extends number = keyof typeof ensRegistryAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof ensRegistryABI, 'setTTL'>['abi'], 'setTTL'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setTTL'
      }
    : UseContractWriteConfig<TMode, typeof ensRegistryABI, 'setTTL'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setTTL'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof ensRegistryABI, 'setTTL'>({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    functionName: 'setTTL',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function usePrepareEnsRegistryWrite<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof ensRegistryABI, TFunctionName>, 'abi' | 'address'> & {
    chainId?: keyof typeof ensRegistryAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    ...config,
  } as UsePrepareContractWriteConfig<typeof ensRegistryABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function usePrepareEnsRegistrySetApprovalForAll(
  config: Omit<UsePrepareContractWriteConfig<typeof ensRegistryABI, 'setApprovalForAll'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ensRegistryAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ensRegistryABI, 'setApprovalForAll'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"setOwner"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function usePrepareEnsRegistrySetOwner(
  config: Omit<UsePrepareContractWriteConfig<typeof ensRegistryABI, 'setOwner'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ensRegistryAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    functionName: 'setOwner',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ensRegistryABI, 'setOwner'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"setRecord"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function usePrepareEnsRegistrySetRecord(
  config: Omit<UsePrepareContractWriteConfig<typeof ensRegistryABI, 'setRecord'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ensRegistryAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    functionName: 'setRecord',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ensRegistryABI, 'setRecord'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"setResolver"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function usePrepareEnsRegistrySetResolver(
  config: Omit<UsePrepareContractWriteConfig<typeof ensRegistryABI, 'setResolver'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ensRegistryAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    functionName: 'setResolver',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ensRegistryABI, 'setResolver'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"setSubnodeOwner"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function usePrepareEnsRegistrySetSubnodeOwner(
  config: Omit<UsePrepareContractWriteConfig<typeof ensRegistryABI, 'setSubnodeOwner'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ensRegistryAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    functionName: 'setSubnodeOwner',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ensRegistryABI, 'setSubnodeOwner'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"setSubnodeRecord"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function usePrepareEnsRegistrySetSubnodeRecord(
  config: Omit<UsePrepareContractWriteConfig<typeof ensRegistryABI, 'setSubnodeRecord'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ensRegistryAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    functionName: 'setSubnodeRecord',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ensRegistryABI, 'setSubnodeRecord'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ensRegistryABI}__ and `functionName` set to `"setTTL"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function usePrepareEnsRegistrySetTtl(
  config: Omit<UsePrepareContractWriteConfig<typeof ensRegistryABI, 'setTTL'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ensRegistryAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    functionName: 'setTTL',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ensRegistryABI, 'setTTL'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ensRegistryABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function useEnsRegistryEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof ensRegistryABI, TEventName>, 'abi' | 'address'> & {
    chainId?: keyof typeof ensRegistryAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    ...config,
  } as UseContractEventConfig<typeof ensRegistryABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ensRegistryABI}__ and `eventName` set to `"ApprovalForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function useEnsRegistryApprovalForAllEvent(
  config: Omit<UseContractEventConfig<typeof ensRegistryABI, 'ApprovalForAll'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof ensRegistryAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<typeof ensRegistryABI, 'ApprovalForAll'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ensRegistryABI}__ and `eventName` set to `"NewOwner"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function useEnsRegistryNewOwnerEvent(
  config: Omit<UseContractEventConfig<typeof ensRegistryABI, 'NewOwner'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof ensRegistryAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    eventName: 'NewOwner',
    ...config,
  } as UseContractEventConfig<typeof ensRegistryABI, 'NewOwner'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ensRegistryABI}__ and `eventName` set to `"NewResolver"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function useEnsRegistryNewResolverEvent(
  config: Omit<UseContractEventConfig<typeof ensRegistryABI, 'NewResolver'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof ensRegistryAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    eventName: 'NewResolver',
    ...config,
  } as UseContractEventConfig<typeof ensRegistryABI, 'NewResolver'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ensRegistryABI}__ and `eventName` set to `"NewTTL"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function useEnsRegistryNewTtlEvent(
  config: Omit<UseContractEventConfig<typeof ensRegistryABI, 'NewTTL'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof ensRegistryAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    eventName: 'NewTTL',
    ...config,
  } as UseContractEventConfig<typeof ensRegistryABI, 'NewTTL'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ensRegistryABI}__ and `eventName` set to `"Transfer"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xba086797534A836Eb05a5E8D777Ea31657EcD935)
 * -
 */
export function useEnsRegistryTransferEvent(
  config: Omit<UseContractEventConfig<typeof ensRegistryABI, 'Transfer'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof ensRegistryAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: ensRegistryABI,
    address: ensRegistryAddress[chainId as keyof typeof ensRegistryAddress],
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<typeof ensRegistryABI, 'Transfer'>)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link ethRegistrarControllerABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarController(
  config: Omit<UseContractConfig, 'abi' | 'address'> & { chainId?: keyof typeof ethRegistrarControllerAddress } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContract({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ethRegistrarControllerABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof ethRegistrarControllerABI, TFunctionName>
>(
  config: Omit<UseContractReadConfig<typeof ethRegistrarControllerABI, TFunctionName, TSelectData>, 'abi' | 'address'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    ...config,
  } as UseContractReadConfig<typeof ethRegistrarControllerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"MIN_REGISTRATION_DURATION"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerMinRegistrationDuration<
  TSelectData = ReadContractResult<typeof ethRegistrarControllerABI, 'MIN_REGISTRATION_DURATION'>
>(
  config: Omit<
    UseContractReadConfig<typeof ethRegistrarControllerABI, 'MIN_REGISTRATION_DURATION', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof ethRegistrarControllerAddress } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'MIN_REGISTRATION_DURATION',
    ...config,
  } as UseContractReadConfig<typeof ethRegistrarControllerABI, 'MIN_REGISTRATION_DURATION', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"available"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerAvailable<TSelectData = ReadContractResult<typeof ethRegistrarControllerABI, 'available'>>(
  config: Omit<UseContractReadConfig<typeof ethRegistrarControllerABI, 'available', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'available',
    ...config,
  } as UseContractReadConfig<typeof ethRegistrarControllerABI, 'available', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"commitments"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerCommitments<TSelectData = ReadContractResult<typeof ethRegistrarControllerABI, 'commitments'>>(
  config: Omit<UseContractReadConfig<typeof ethRegistrarControllerABI, 'commitments', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'commitments',
    ...config,
  } as UseContractReadConfig<typeof ethRegistrarControllerABI, 'commitments', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"makeCommitment"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerMakeCommitment<TSelectData = ReadContractResult<typeof ethRegistrarControllerABI, 'makeCommitment'>>(
  config: Omit<UseContractReadConfig<typeof ethRegistrarControllerABI, 'makeCommitment', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'makeCommitment',
    ...config,
  } as UseContractReadConfig<typeof ethRegistrarControllerABI, 'makeCommitment', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"maxCommitmentAge"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerMaxCommitmentAge<TSelectData = ReadContractResult<typeof ethRegistrarControllerABI, 'maxCommitmentAge'>>(
  config: Omit<UseContractReadConfig<typeof ethRegistrarControllerABI, 'maxCommitmentAge', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'maxCommitmentAge',
    ...config,
  } as UseContractReadConfig<typeof ethRegistrarControllerABI, 'maxCommitmentAge', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"minCommitmentAge"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerMinCommitmentAge<TSelectData = ReadContractResult<typeof ethRegistrarControllerABI, 'minCommitmentAge'>>(
  config: Omit<UseContractReadConfig<typeof ethRegistrarControllerABI, 'minCommitmentAge', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'minCommitmentAge',
    ...config,
  } as UseContractReadConfig<typeof ethRegistrarControllerABI, 'minCommitmentAge', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"nameWrapper"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerNameWrapper<TSelectData = ReadContractResult<typeof ethRegistrarControllerABI, 'nameWrapper'>>(
  config: Omit<UseContractReadConfig<typeof ethRegistrarControllerABI, 'nameWrapper', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'nameWrapper',
    ...config,
  } as UseContractReadConfig<typeof ethRegistrarControllerABI, 'nameWrapper', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"owner"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerOwner<TSelectData = ReadContractResult<typeof ethRegistrarControllerABI, 'owner'>>(
  config: Omit<UseContractReadConfig<typeof ethRegistrarControllerABI, 'owner', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof ethRegistrarControllerABI, 'owner', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"prices"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerPrices<TSelectData = ReadContractResult<typeof ethRegistrarControllerABI, 'prices'>>(
  config: Omit<UseContractReadConfig<typeof ethRegistrarControllerABI, 'prices', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'prices',
    ...config,
  } as UseContractReadConfig<typeof ethRegistrarControllerABI, 'prices', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"rentPrice"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerRentPrice<TSelectData = ReadContractResult<typeof ethRegistrarControllerABI, 'rentPrice'>>(
  config: Omit<UseContractReadConfig<typeof ethRegistrarControllerABI, 'rentPrice', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'rentPrice',
    ...config,
  } as UseContractReadConfig<typeof ethRegistrarControllerABI, 'rentPrice', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"reverseRegistrar"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerReverseRegistrar<TSelectData = ReadContractResult<typeof ethRegistrarControllerABI, 'reverseRegistrar'>>(
  config: Omit<UseContractReadConfig<typeof ethRegistrarControllerABI, 'reverseRegistrar', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'reverseRegistrar',
    ...config,
  } as UseContractReadConfig<typeof ethRegistrarControllerABI, 'reverseRegistrar', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerSupportsInterface<TSelectData = ReadContractResult<typeof ethRegistrarControllerABI, 'supportsInterface'>>(
  config: Omit<UseContractReadConfig<typeof ethRegistrarControllerABI, 'supportsInterface', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<typeof ethRegistrarControllerABI, 'supportsInterface', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"valid"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerValid<TSelectData = ReadContractResult<typeof ethRegistrarControllerABI, 'valid'>>(
  config: Omit<UseContractReadConfig<typeof ethRegistrarControllerABI, 'valid', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'valid',
    ...config,
  } as UseContractReadConfig<typeof ethRegistrarControllerABI, 'valid', TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ethRegistrarControllerABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof ethRegistrarControllerAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof ethRegistrarControllerABI, string>['abi'], TFunctionName> & {
        address?: Address
        chainId?: TChainId
      }
    : UseContractWriteConfig<TMode, typeof ethRegistrarControllerABI, TFunctionName> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof ethRegistrarControllerABI, TFunctionName>({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"commit"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerCommit<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof ethRegistrarControllerAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof ethRegistrarControllerABI, 'commit'>['abi'], 'commit'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'commit'
      }
    : UseContractWriteConfig<TMode, typeof ethRegistrarControllerABI, 'commit'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'commit'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof ethRegistrarControllerABI, 'commit'>({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'commit',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"recoverFunds"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerRecoverFunds<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof ethRegistrarControllerAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof ethRegistrarControllerABI, 'recoverFunds'>['abi'], 'recoverFunds'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'recoverFunds'
      }
    : UseContractWriteConfig<TMode, typeof ethRegistrarControllerABI, 'recoverFunds'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'recoverFunds'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof ethRegistrarControllerABI, 'recoverFunds'>({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'recoverFunds',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"register"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerRegister<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof ethRegistrarControllerAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof ethRegistrarControllerABI, 'register'>['abi'], 'register'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'register'
      }
    : UseContractWriteConfig<TMode, typeof ethRegistrarControllerABI, 'register'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'register'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof ethRegistrarControllerABI, 'register'>({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'register',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"renew"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerRenew<TMode extends WriteContractMode, TChainId extends number = keyof typeof ethRegistrarControllerAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof ethRegistrarControllerABI, 'renew'>['abi'], 'renew'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renew'
      }
    : UseContractWriteConfig<TMode, typeof ethRegistrarControllerABI, 'renew'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renew'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof ethRegistrarControllerABI, 'renew'>({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'renew',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerRenounceOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof ethRegistrarControllerAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof ethRegistrarControllerABI, 'renounceOwnership'>['abi'], 'renounceOwnership'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<TMode, typeof ethRegistrarControllerABI, 'renounceOwnership'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof ethRegistrarControllerABI, 'renounceOwnership'>({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerTransferOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof ethRegistrarControllerAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof ethRegistrarControllerABI, 'transferOwnership'>['abi'], 'transferOwnership'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<TMode, typeof ethRegistrarControllerABI, 'transferOwnership'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof ethRegistrarControllerABI, 'transferOwnership'>({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"withdraw"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerWithdraw<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof ethRegistrarControllerAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof ethRegistrarControllerABI, 'withdraw'>['abi'], 'withdraw'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'withdraw'
      }
    : UseContractWriteConfig<TMode, typeof ethRegistrarControllerABI, 'withdraw'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'withdraw'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof ethRegistrarControllerABI, 'withdraw'>({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'withdraw',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ethRegistrarControllerABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function usePrepareEthRegistrarControllerWrite<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof ethRegistrarControllerABI, TFunctionName>, 'abi' | 'address'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    ...config,
  } as UsePrepareContractWriteConfig<typeof ethRegistrarControllerABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"commit"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function usePrepareEthRegistrarControllerCommit(
  config: Omit<UsePrepareContractWriteConfig<typeof ethRegistrarControllerABI, 'commit'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'commit',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ethRegistrarControllerABI, 'commit'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"recoverFunds"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function usePrepareEthRegistrarControllerRecoverFunds(
  config: Omit<UsePrepareContractWriteConfig<typeof ethRegistrarControllerABI, 'recoverFunds'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'recoverFunds',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ethRegistrarControllerABI, 'recoverFunds'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"register"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function usePrepareEthRegistrarControllerRegister(
  config: Omit<UsePrepareContractWriteConfig<typeof ethRegistrarControllerABI, 'register'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'register',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ethRegistrarControllerABI, 'register'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"renew"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function usePrepareEthRegistrarControllerRenew(
  config: Omit<UsePrepareContractWriteConfig<typeof ethRegistrarControllerABI, 'renew'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'renew',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ethRegistrarControllerABI, 'renew'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function usePrepareEthRegistrarControllerRenounceOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof ethRegistrarControllerABI, 'renounceOwnership'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ethRegistrarControllerABI, 'renounceOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function usePrepareEthRegistrarControllerTransferOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof ethRegistrarControllerABI, 'transferOwnership'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ethRegistrarControllerABI, 'transferOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `functionName` set to `"withdraw"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function usePrepareEthRegistrarControllerWithdraw(
  config: Omit<UsePrepareContractWriteConfig<typeof ethRegistrarControllerABI, 'withdraw'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    functionName: 'withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<typeof ethRegistrarControllerABI, 'withdraw'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ethRegistrarControllerABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof ethRegistrarControllerABI, TEventName>, 'abi' | 'address'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    ...config,
  } as UseContractEventConfig<typeof ethRegistrarControllerABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `eventName` set to `"NameRegistered"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerNameRegisteredEvent(
  config: Omit<UseContractEventConfig<typeof ethRegistrarControllerABI, 'NameRegistered'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    eventName: 'NameRegistered',
    ...config,
  } as UseContractEventConfig<typeof ethRegistrarControllerABI, 'NameRegistered'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `eventName` set to `"NameRenewed"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerNameRenewedEvent(
  config: Omit<UseContractEventConfig<typeof ethRegistrarControllerABI, 'NameRenewed'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    eventName: 'NameRenewed',
    ...config,
  } as UseContractEventConfig<typeof ethRegistrarControllerABI, 'NameRenewed'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ethRegistrarControllerABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x1CA5F841eD0377a4FbB2669b70cA1c963828BF57)
 * -
 */
export function useEthRegistrarControllerOwnershipTransferredEvent(
  config: Omit<UseContractEventConfig<typeof ethRegistrarControllerABI, 'OwnershipTransferred'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof ethRegistrarControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: ethRegistrarControllerABI,
    address: ethRegistrarControllerAddress[chainId as keyof typeof ethRegistrarControllerAddress],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof ethRegistrarControllerABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link nameWrapperABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapper(config: Omit<UseContractConfig, 'abi' | 'address'> & { chainId?: keyof typeof nameWrapperAddress } = {} as any) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContract({ abi: nameWrapperABI, address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress], ...config })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperRead<TFunctionName extends string, TSelectData = ReadContractResult<typeof nameWrapperABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, TFunctionName, TSelectData>, 'abi' | 'address'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"_tokens"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperTokens<TSelectData = ReadContractResult<typeof nameWrapperABI, '_tokens'>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, '_tokens', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: '_tokens',
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, '_tokens', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"allFusesBurned"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperAllFusesBurned<TSelectData = ReadContractResult<typeof nameWrapperABI, 'allFusesBurned'>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, 'allFusesBurned', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'allFusesBurned',
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, 'allFusesBurned', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"balanceOf"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperBalanceOf<TSelectData = ReadContractResult<typeof nameWrapperABI, 'balanceOf'>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, 'balanceOf', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, 'balanceOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"balanceOfBatch"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperBalanceOfBatch<TSelectData = ReadContractResult<typeof nameWrapperABI, 'balanceOfBatch'>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, 'balanceOfBatch', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'balanceOfBatch',
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, 'balanceOfBatch', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"canExtendSubnames"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperCanExtendSubnames<TSelectData = ReadContractResult<typeof nameWrapperABI, 'canExtendSubnames'>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, 'canExtendSubnames', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'canExtendSubnames',
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, 'canExtendSubnames', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"canModifyName"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperCanModifyName<TSelectData = ReadContractResult<typeof nameWrapperABI, 'canModifyName'>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, 'canModifyName', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'canModifyName',
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, 'canModifyName', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"controllers"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperControllers<TSelectData = ReadContractResult<typeof nameWrapperABI, 'controllers'>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, 'controllers', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'controllers',
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, 'controllers', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"ens"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperEns<TSelectData = ReadContractResult<typeof nameWrapperABI, 'ens'>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, 'ens', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'ens',
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, 'ens', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"getApproved"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperGetApproved<TSelectData = ReadContractResult<typeof nameWrapperABI, 'getApproved'>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, 'getApproved', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, 'getApproved', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"getData"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperGetData<TSelectData = ReadContractResult<typeof nameWrapperABI, 'getData'>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, 'getData', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'getData',
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, 'getData', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperIsApprovedForAll<TSelectData = ReadContractResult<typeof nameWrapperABI, 'isApprovedForAll'>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, 'isApprovedForAll', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, 'isApprovedForAll', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"isWrapped"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperIsWrapped<TSelectData = ReadContractResult<typeof nameWrapperABI, 'isWrapped'>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, 'isWrapped', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'isWrapped',
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, 'isWrapped', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"metadataService"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperMetadataService<TSelectData = ReadContractResult<typeof nameWrapperABI, 'metadataService'>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, 'metadataService', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'metadataService',
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, 'metadataService', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"name"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperName<TSelectData = ReadContractResult<typeof nameWrapperABI, 'name'>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, 'name', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, 'name', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"names"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperNames<TSelectData = ReadContractResult<typeof nameWrapperABI, 'names'>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, 'names', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'names',
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, 'names', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"owner"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperOwner<TSelectData = ReadContractResult<typeof nameWrapperABI, 'owner'>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, 'owner', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, 'owner', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"ownerOf"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperOwnerOf<TSelectData = ReadContractResult<typeof nameWrapperABI, 'ownerOf'>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, 'ownerOf', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, 'ownerOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"registrar"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperRegistrar<TSelectData = ReadContractResult<typeof nameWrapperABI, 'registrar'>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, 'registrar', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'registrar',
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, 'registrar', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperSupportsInterface<TSelectData = ReadContractResult<typeof nameWrapperABI, 'supportsInterface'>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, 'supportsInterface', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, 'supportsInterface', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"upgradeContract"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperUpgradeContract<TSelectData = ReadContractResult<typeof nameWrapperABI, 'upgradeContract'>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, 'upgradeContract', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'upgradeContract',
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, 'upgradeContract', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"uri"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperUri<TSelectData = ReadContractResult<typeof nameWrapperABI, 'uri'>>(
  config: Omit<UseContractReadConfig<typeof nameWrapperABI, 'uri', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'uri',
    ...config,
  } as UseContractReadConfig<typeof nameWrapperABI, 'uri', TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof nameWrapperAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, string>['abi'], TFunctionName> & {
        address?: Address
        chainId?: TChainId
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, TFunctionName> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, TFunctionName>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"approve"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperApprove<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'approve'>['abi'], 'approve'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'approve'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'approve'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'approve'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'approve'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"extendExpiry"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperExtendExpiry<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'extendExpiry'>['abi'], 'extendExpiry'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'extendExpiry'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'extendExpiry'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'extendExpiry'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'extendExpiry'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'extendExpiry',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"onERC721Received"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperOnErc721Received<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'onERC721Received'>['abi'], 'onERC721Received'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'onERC721Received'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'onERC721Received'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'onERC721Received'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'onERC721Received'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'onERC721Received',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"recoverFunds"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperRecoverFunds<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'recoverFunds'>['abi'], 'recoverFunds'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'recoverFunds'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'recoverFunds'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'recoverFunds'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'recoverFunds'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'recoverFunds',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"registerAndWrapETH2LD"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperRegisterAndWrapEth2Ld<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'registerAndWrapETH2LD'>['abi'], 'registerAndWrapETH2LD'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'registerAndWrapETH2LD'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'registerAndWrapETH2LD'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'registerAndWrapETH2LD'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'registerAndWrapETH2LD'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'registerAndWrapETH2LD',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"renew"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperRenew<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'renew'>['abi'], 'renew'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renew'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'renew'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renew'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'renew'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'renew',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperRenounceOwnership<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'renounceOwnership'>['abi'], 'renounceOwnership'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'renounceOwnership'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'renounceOwnership'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"safeBatchTransferFrom"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperSafeBatchTransferFrom<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'safeBatchTransferFrom'>['abi'], 'safeBatchTransferFrom'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'safeBatchTransferFrom'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'safeBatchTransferFrom'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'safeBatchTransferFrom'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'safeBatchTransferFrom'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'safeBatchTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperSafeTransferFrom<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'safeTransferFrom'>['abi'], 'safeTransferFrom'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'safeTransferFrom'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'safeTransferFrom'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperSetApprovalForAll<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'setApprovalForAll'>['abi'], 'setApprovalForAll'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'setApprovalForAll'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'setApprovalForAll'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setChildFuses"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperSetChildFuses<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'setChildFuses'>['abi'], 'setChildFuses'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setChildFuses'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'setChildFuses'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setChildFuses'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'setChildFuses'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setChildFuses',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setController"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperSetController<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'setController'>['abi'], 'setController'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setController'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'setController'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setController'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'setController'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setController',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setFuses"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperSetFuses<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'setFuses'>['abi'], 'setFuses'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setFuses'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'setFuses'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setFuses'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'setFuses'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setFuses',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setMetadataService"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperSetMetadataService<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'setMetadataService'>['abi'], 'setMetadataService'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setMetadataService'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'setMetadataService'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setMetadataService'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'setMetadataService'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setMetadataService',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setRecord"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperSetRecord<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'setRecord'>['abi'], 'setRecord'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setRecord'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'setRecord'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setRecord'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'setRecord'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setRecord',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setResolver"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperSetResolver<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'setResolver'>['abi'], 'setResolver'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setResolver'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'setResolver'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setResolver'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'setResolver'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setResolver',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setSubnodeOwner"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperSetSubnodeOwner<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'setSubnodeOwner'>['abi'], 'setSubnodeOwner'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setSubnodeOwner'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'setSubnodeOwner'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setSubnodeOwner'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'setSubnodeOwner'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setSubnodeOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setSubnodeRecord"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperSetSubnodeRecord<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'setSubnodeRecord'>['abi'], 'setSubnodeRecord'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setSubnodeRecord'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'setSubnodeRecord'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setSubnodeRecord'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'setSubnodeRecord'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setSubnodeRecord',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setTTL"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperSetTtl<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'setTTL'>['abi'], 'setTTL'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setTTL'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'setTTL'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setTTL'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'setTTL'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setTTL',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setUpgradeContract"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperSetUpgradeContract<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'setUpgradeContract'>['abi'], 'setUpgradeContract'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setUpgradeContract'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'setUpgradeContract'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setUpgradeContract'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'setUpgradeContract'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setUpgradeContract',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperTransferOwnership<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'transferOwnership'>['abi'], 'transferOwnership'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'transferOwnership'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'transferOwnership'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"unwrap"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperUnwrap<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'unwrap'>['abi'], 'unwrap'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'unwrap'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'unwrap'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'unwrap'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'unwrap'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'unwrap',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"unwrapETH2LD"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperUnwrapEth2Ld<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'unwrapETH2LD'>['abi'], 'unwrapETH2LD'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'unwrapETH2LD'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'unwrapETH2LD'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'unwrapETH2LD'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'unwrapETH2LD'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'unwrapETH2LD',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"upgrade"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperUpgrade<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'upgrade'>['abi'], 'upgrade'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'upgrade'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'upgrade'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'upgrade'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'upgrade'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'upgrade',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"wrap"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperWrap<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'wrap'>['abi'], 'wrap'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'wrap'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'wrap'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'wrap'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'wrap'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'wrap',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"wrapETH2LD"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperWrapEth2Ld<TMode extends WriteContractMode, TChainId extends number = keyof typeof nameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof nameWrapperABI, 'wrapETH2LD'>['abi'], 'wrapETH2LD'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'wrapETH2LD'
      }
    : UseContractWriteConfig<TMode, typeof nameWrapperABI, 'wrapETH2LD'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'wrapETH2LD'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof nameWrapperABI, 'wrapETH2LD'>({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'wrapETH2LD',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperWrite<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, TFunctionName>, 'abi' | 'address'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"approve"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperApprove(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'approve'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"extendExpiry"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperExtendExpiry(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'extendExpiry'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'extendExpiry',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'extendExpiry'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"onERC721Received"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperOnErc721Received(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'onERC721Received'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'onERC721Received',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'onERC721Received'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"recoverFunds"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperRecoverFunds(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'recoverFunds'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'recoverFunds',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'recoverFunds'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"registerAndWrapETH2LD"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperRegisterAndWrapEth2Ld(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'registerAndWrapETH2LD'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'registerAndWrapETH2LD',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'registerAndWrapETH2LD'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"renew"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperRenew(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'renew'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'renew',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'renew'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperRenounceOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'renounceOwnership'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'renounceOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"safeBatchTransferFrom"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperSafeBatchTransferFrom(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'safeBatchTransferFrom'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'safeBatchTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'safeBatchTransferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperSafeTransferFrom(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'safeTransferFrom'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'safeTransferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperSetApprovalForAll(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setApprovalForAll'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setApprovalForAll'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setChildFuses"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperSetChildFuses(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setChildFuses'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setChildFuses',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setChildFuses'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setController"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperSetController(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setController'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setController',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setController'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setFuses"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperSetFuses(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setFuses'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setFuses',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setFuses'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setMetadataService"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperSetMetadataService(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setMetadataService'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setMetadataService',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setMetadataService'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setRecord"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperSetRecord(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setRecord'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setRecord',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setRecord'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setResolver"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperSetResolver(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setResolver'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setResolver',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setResolver'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setSubnodeOwner"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperSetSubnodeOwner(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setSubnodeOwner'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setSubnodeOwner',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setSubnodeOwner'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setSubnodeRecord"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperSetSubnodeRecord(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setSubnodeRecord'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setSubnodeRecord',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setSubnodeRecord'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setTTL"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperSetTtl(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setTTL'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setTTL',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setTTL'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"setUpgradeContract"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperSetUpgradeContract(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setUpgradeContract'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'setUpgradeContract',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'setUpgradeContract'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperTransferOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'transferOwnership'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'transferOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"unwrap"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperUnwrap(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'unwrap'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'unwrap',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'unwrap'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"unwrapETH2LD"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperUnwrapEth2Ld(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'unwrapETH2LD'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'unwrapETH2LD',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'unwrapETH2LD'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"upgrade"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperUpgrade(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'upgrade'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'upgrade',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'upgrade'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"wrap"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperWrap(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'wrap'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'wrap',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'wrap'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link nameWrapperABI}__ and `functionName` set to `"wrapETH2LD"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function usePrepareNameWrapperWrapEth2Ld(
  config: Omit<UsePrepareContractWriteConfig<typeof nameWrapperABI, 'wrapETH2LD'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    functionName: 'wrapETH2LD',
    ...config,
  } as UsePrepareContractWriteConfig<typeof nameWrapperABI, 'wrapETH2LD'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nameWrapperABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof nameWrapperABI, TEventName>, 'abi' | 'address'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    ...config,
  } as UseContractEventConfig<typeof nameWrapperABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nameWrapperABI}__ and `eventName` set to `"Approval"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperApprovalEvent(
  config: Omit<UseContractEventConfig<typeof nameWrapperABI, 'Approval'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<typeof nameWrapperABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nameWrapperABI}__ and `eventName` set to `"ApprovalForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperApprovalForAllEvent(
  config: Omit<UseContractEventConfig<typeof nameWrapperABI, 'ApprovalForAll'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<typeof nameWrapperABI, 'ApprovalForAll'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nameWrapperABI}__ and `eventName` set to `"ControllerChanged"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperControllerChangedEvent(
  config: Omit<UseContractEventConfig<typeof nameWrapperABI, 'ControllerChanged'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    eventName: 'ControllerChanged',
    ...config,
  } as UseContractEventConfig<typeof nameWrapperABI, 'ControllerChanged'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nameWrapperABI}__ and `eventName` set to `"ExpiryExtended"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperExpiryExtendedEvent(
  config: Omit<UseContractEventConfig<typeof nameWrapperABI, 'ExpiryExtended'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    eventName: 'ExpiryExtended',
    ...config,
  } as UseContractEventConfig<typeof nameWrapperABI, 'ExpiryExtended'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nameWrapperABI}__ and `eventName` set to `"FusesSet"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperFusesSetEvent(
  config: Omit<UseContractEventConfig<typeof nameWrapperABI, 'FusesSet'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    eventName: 'FusesSet',
    ...config,
  } as UseContractEventConfig<typeof nameWrapperABI, 'FusesSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nameWrapperABI}__ and `eventName` set to `"NameUnwrapped"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperNameUnwrappedEvent(
  config: Omit<UseContractEventConfig<typeof nameWrapperABI, 'NameUnwrapped'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    eventName: 'NameUnwrapped',
    ...config,
  } as UseContractEventConfig<typeof nameWrapperABI, 'NameUnwrapped'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nameWrapperABI}__ and `eventName` set to `"NameWrapped"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperNameWrappedEvent(
  config: Omit<UseContractEventConfig<typeof nameWrapperABI, 'NameWrapped'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    eventName: 'NameWrapped',
    ...config,
  } as UseContractEventConfig<typeof nameWrapperABI, 'NameWrapped'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nameWrapperABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperOwnershipTransferredEvent(
  config: Omit<UseContractEventConfig<typeof nameWrapperABI, 'OwnershipTransferred'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof nameWrapperABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nameWrapperABI}__ and `eventName` set to `"TransferBatch"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperTransferBatchEvent(
  config: Omit<UseContractEventConfig<typeof nameWrapperABI, 'TransferBatch'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    eventName: 'TransferBatch',
    ...config,
  } as UseContractEventConfig<typeof nameWrapperABI, 'TransferBatch'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nameWrapperABI}__ and `eventName` set to `"TransferSingle"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperTransferSingleEvent(
  config: Omit<UseContractEventConfig<typeof nameWrapperABI, 'TransferSingle'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    eventName: 'TransferSingle',
    ...config,
  } as UseContractEventConfig<typeof nameWrapperABI, 'TransferSingle'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link nameWrapperABI}__ and `eventName` set to `"URI"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x709f9958541FD5E699149572D3675ed86585DEAD)
 * -
 */
export function useNameWrapperUriEvent(
  config: Omit<UseContractEventConfig<typeof nameWrapperABI, 'URI'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof nameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: nameWrapperABI,
    address: nameWrapperAddress[chainId as keyof typeof nameWrapperAddress],
    eventName: 'URI',
    ...config,
  } as UseContractEventConfig<typeof nameWrapperABI, 'URI'>)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link renewalControllerABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalController(
  config: Omit<UseContractConfig, 'abi' | 'address'> & { chainId?: keyof typeof renewalControllerAddress } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContract({ abi: renewalControllerABI, address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress], ...config })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link renewalControllerABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerRead<TFunctionName extends string, TSelectData = ReadContractResult<typeof renewalControllerABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof renewalControllerABI, TFunctionName, TSelectData>, 'abi' | 'address'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    ...config,
  } as UseContractReadConfig<typeof renewalControllerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"balances"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerBalances<TSelectData = ReadContractResult<typeof renewalControllerABI, 'balances'>>(
  config: Omit<UseContractReadConfig<typeof renewalControllerABI, 'balances', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'balances',
    ...config,
  } as UseContractReadConfig<typeof renewalControllerABI, 'balances', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"charAmounts"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerCharAmounts<TSelectData = ReadContractResult<typeof renewalControllerABI, 'charAmounts'>>(
  config: Omit<UseContractReadConfig<typeof renewalControllerABI, 'charAmounts', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'charAmounts',
    ...config,
  } as UseContractReadConfig<typeof renewalControllerABI, 'charAmounts', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"ens"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerEns<TSelectData = ReadContractResult<typeof renewalControllerABI, 'ens'>>(
  config: Omit<UseContractReadConfig<typeof renewalControllerABI, 'ens', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'ens',
    ...config,
  } as UseContractReadConfig<typeof renewalControllerABI, 'ens', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"getLastCharIndex"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerGetLastCharIndex<TSelectData = ReadContractResult<typeof renewalControllerABI, 'getLastCharIndex'>>(
  config: Omit<UseContractReadConfig<typeof renewalControllerABI, 'getLastCharIndex', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'getLastCharIndex',
    ...config,
  } as UseContractReadConfig<typeof renewalControllerABI, 'getLastCharIndex', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"nameWrapperVersion"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerNameWrapperVersion<TSelectData = ReadContractResult<typeof renewalControllerABI, 'nameWrapperVersion'>>(
  config: Omit<UseContractReadConfig<typeof renewalControllerABI, 'nameWrapperVersion', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'nameWrapperVersion',
    ...config,
  } as UseContractReadConfig<typeof renewalControllerABI, 'nameWrapperVersion', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"nameWrappers"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerNameWrappers<TSelectData = ReadContractResult<typeof renewalControllerABI, 'nameWrappers'>>(
  config: Omit<UseContractReadConfig<typeof renewalControllerABI, 'nameWrappers', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'nameWrappers',
    ...config,
  } as UseContractReadConfig<typeof renewalControllerABI, 'nameWrappers', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"owner"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerOwner<TSelectData = ReadContractResult<typeof renewalControllerABI, 'owner'>>(
  config: Omit<UseContractReadConfig<typeof renewalControllerABI, 'owner', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof renewalControllerABI, 'owner', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"ownerCut"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerOwnerCut<TSelectData = ReadContractResult<typeof renewalControllerABI, 'ownerCut'>>(
  config: Omit<UseContractReadConfig<typeof renewalControllerABI, 'ownerCut', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'ownerCut',
    ...config,
  } as UseContractReadConfig<typeof renewalControllerABI, 'ownerCut', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"referrerCuts"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerReferrerCuts<TSelectData = ReadContractResult<typeof renewalControllerABI, 'referrerCuts'>>(
  config: Omit<UseContractReadConfig<typeof renewalControllerABI, 'referrerCuts', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'referrerCuts',
    ...config,
  } as UseContractReadConfig<typeof renewalControllerABI, 'referrerCuts', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"rentPrice"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerRentPrice<TSelectData = ReadContractResult<typeof renewalControllerABI, 'rentPrice'>>(
  config: Omit<UseContractReadConfig<typeof renewalControllerABI, 'rentPrice', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'rentPrice',
    ...config,
  } as UseContractReadConfig<typeof renewalControllerABI, 'rentPrice', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"subnameWrapperVersion"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerSubnameWrapperVersion<TSelectData = ReadContractResult<typeof renewalControllerABI, 'subnameWrapperVersion'>>(
  config: Omit<UseContractReadConfig<typeof renewalControllerABI, 'subnameWrapperVersion', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'subnameWrapperVersion',
    ...config,
  } as UseContractReadConfig<typeof renewalControllerABI, 'subnameWrapperVersion', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"subnameWrappers"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerSubnameWrappers<TSelectData = ReadContractResult<typeof renewalControllerABI, 'subnameWrappers'>>(
  config: Omit<UseContractReadConfig<typeof renewalControllerABI, 'subnameWrappers', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'subnameWrappers',
    ...config,
  } as UseContractReadConfig<typeof renewalControllerABI, 'subnameWrappers', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerSupportsInterface<TSelectData = ReadContractResult<typeof renewalControllerABI, 'supportsInterface'>>(
  config: Omit<UseContractReadConfig<typeof renewalControllerABI, 'supportsInterface', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<typeof renewalControllerABI, 'supportsInterface', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"totalBalance"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerTotalBalance<TSelectData = ReadContractResult<typeof renewalControllerABI, 'totalBalance'>>(
  config: Omit<UseContractReadConfig<typeof renewalControllerABI, 'totalBalance', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'totalBalance',
    ...config,
  } as UseContractReadConfig<typeof renewalControllerABI, 'totalBalance', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"usdOracle"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerUsdOracle<TSelectData = ReadContractResult<typeof renewalControllerABI, 'usdOracle'>>(
  config: Omit<UseContractReadConfig<typeof renewalControllerABI, 'usdOracle', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'usdOracle',
    ...config,
  } as UseContractReadConfig<typeof renewalControllerABI, 'usdOracle', TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link renewalControllerABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof renewalControllerAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof renewalControllerABI, string>['abi'], TFunctionName> & {
        address?: Address
        chainId?: TChainId
      }
    : UseContractWriteConfig<TMode, typeof renewalControllerABI, TFunctionName> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof renewalControllerABI, TFunctionName>({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"addNextNameWrapperVersion"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerAddNextNameWrapperVersion<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof renewalControllerAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof renewalControllerABI, 'addNextNameWrapperVersion'>['abi'],
        'addNextNameWrapperVersion'
      > & { address?: Address; chainId?: TChainId; functionName?: 'addNextNameWrapperVersion' }
    : UseContractWriteConfig<TMode, typeof renewalControllerABI, 'addNextNameWrapperVersion'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'addNextNameWrapperVersion'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof renewalControllerABI, 'addNextNameWrapperVersion'>({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'addNextNameWrapperVersion',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"addNextPriceForCharLength"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerAddNextPriceForCharLength<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof renewalControllerAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof renewalControllerABI, 'addNextPriceForCharLength'>['abi'],
        'addNextPriceForCharLength'
      > & { address?: Address; chainId?: TChainId; functionName?: 'addNextPriceForCharLength' }
    : UseContractWriteConfig<TMode, typeof renewalControllerABI, 'addNextPriceForCharLength'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'addNextPriceForCharLength'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof renewalControllerABI, 'addNextPriceForCharLength'>({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'addNextPriceForCharLength',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"addNextSubnameWrapperVersion"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerAddNextSubnameWrapperVersion<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof renewalControllerAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof renewalControllerABI, 'addNextSubnameWrapperVersion'>['abi'],
        'addNextSubnameWrapperVersion'
      > & { address?: Address; chainId?: TChainId; functionName?: 'addNextSubnameWrapperVersion' }
    : UseContractWriteConfig<TMode, typeof renewalControllerABI, 'addNextSubnameWrapperVersion'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'addNextSubnameWrapperVersion'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof renewalControllerABI, 'addNextSubnameWrapperVersion'>({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'addNextSubnameWrapperVersion',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"recoverFunds"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerRecoverFunds<TMode extends WriteContractMode, TChainId extends number = keyof typeof renewalControllerAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof renewalControllerABI, 'recoverFunds'>['abi'], 'recoverFunds'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'recoverFunds'
      }
    : UseContractWriteConfig<TMode, typeof renewalControllerABI, 'recoverFunds'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'recoverFunds'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof renewalControllerABI, 'recoverFunds'>({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'recoverFunds',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"renew"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerRenew<TMode extends WriteContractMode, TChainId extends number = keyof typeof renewalControllerAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof renewalControllerABI, 'renew'>['abi'], 'renew'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renew'
      }
    : UseContractWriteConfig<TMode, typeof renewalControllerABI, 'renew'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renew'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof renewalControllerABI, 'renew'>({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'renew',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"renewWithVersions"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerRenewWithVersions<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof renewalControllerAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof renewalControllerABI, 'renewWithVersions'>['abi'], 'renewWithVersions'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renewWithVersions'
      }
    : UseContractWriteConfig<TMode, typeof renewalControllerABI, 'renewWithVersions'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renewWithVersions'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof renewalControllerABI, 'renewWithVersions'>({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'renewWithVersions',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerRenounceOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof renewalControllerAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof renewalControllerABI, 'renounceOwnership'>['abi'], 'renounceOwnership'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<TMode, typeof renewalControllerABI, 'renounceOwnership'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof renewalControllerABI, 'renounceOwnership'>({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"setOwnerCut"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerSetOwnerCut<TMode extends WriteContractMode, TChainId extends number = keyof typeof renewalControllerAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof renewalControllerABI, 'setOwnerCut'>['abi'], 'setOwnerCut'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setOwnerCut'
      }
    : UseContractWriteConfig<TMode, typeof renewalControllerABI, 'setOwnerCut'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setOwnerCut'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof renewalControllerABI, 'setOwnerCut'>({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'setOwnerCut',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"setPricingForAllLengths"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerSetPricingForAllLengths<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof renewalControllerAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof renewalControllerABI, 'setPricingForAllLengths'>['abi'],
        'setPricingForAllLengths'
      > & { address?: Address; chainId?: TChainId; functionName?: 'setPricingForAllLengths' }
    : UseContractWriteConfig<TMode, typeof renewalControllerABI, 'setPricingForAllLengths'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setPricingForAllLengths'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof renewalControllerABI, 'setPricingForAllLengths'>({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'setPricingForAllLengths',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"setReferrerCut"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerSetReferrerCut<TMode extends WriteContractMode, TChainId extends number = keyof typeof renewalControllerAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof renewalControllerABI, 'setReferrerCut'>['abi'], 'setReferrerCut'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setReferrerCut'
      }
    : UseContractWriteConfig<TMode, typeof renewalControllerABI, 'setReferrerCut'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setReferrerCut'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof renewalControllerABI, 'setReferrerCut'>({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'setReferrerCut',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerTransferOwnership<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof renewalControllerAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof renewalControllerABI, 'transferOwnership'>['abi'], 'transferOwnership'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<TMode, typeof renewalControllerABI, 'transferOwnership'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof renewalControllerABI, 'transferOwnership'>({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"updatePriceForCharLength"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerUpdatePriceForCharLength<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof renewalControllerAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof renewalControllerABI, 'updatePriceForCharLength'>['abi'],
        'updatePriceForCharLength'
      > & { address?: Address; chainId?: TChainId; functionName?: 'updatePriceForCharLength' }
    : UseContractWriteConfig<TMode, typeof renewalControllerABI, 'updatePriceForCharLength'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'updatePriceForCharLength'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof renewalControllerABI, 'updatePriceForCharLength'>({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'updatePriceForCharLength',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"withdraw"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerWithdraw<TMode extends WriteContractMode, TChainId extends number = keyof typeof renewalControllerAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof renewalControllerABI, 'withdraw'>['abi'], 'withdraw'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'withdraw'
      }
    : UseContractWriteConfig<TMode, typeof renewalControllerABI, 'withdraw'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'withdraw'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof renewalControllerABI, 'withdraw'>({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'withdraw',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link renewalControllerABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function usePrepareRenewalControllerWrite<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof renewalControllerABI, TFunctionName>, 'abi' | 'address'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    ...config,
  } as UsePrepareContractWriteConfig<typeof renewalControllerABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"addNextNameWrapperVersion"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function usePrepareRenewalControllerAddNextNameWrapperVersion(
  config: Omit<UsePrepareContractWriteConfig<typeof renewalControllerABI, 'addNextNameWrapperVersion'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'addNextNameWrapperVersion',
    ...config,
  } as UsePrepareContractWriteConfig<typeof renewalControllerABI, 'addNextNameWrapperVersion'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"addNextPriceForCharLength"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function usePrepareRenewalControllerAddNextPriceForCharLength(
  config: Omit<UsePrepareContractWriteConfig<typeof renewalControllerABI, 'addNextPriceForCharLength'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'addNextPriceForCharLength',
    ...config,
  } as UsePrepareContractWriteConfig<typeof renewalControllerABI, 'addNextPriceForCharLength'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"addNextSubnameWrapperVersion"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function usePrepareRenewalControllerAddNextSubnameWrapperVersion(
  config: Omit<UsePrepareContractWriteConfig<typeof renewalControllerABI, 'addNextSubnameWrapperVersion'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'addNextSubnameWrapperVersion',
    ...config,
  } as UsePrepareContractWriteConfig<typeof renewalControllerABI, 'addNextSubnameWrapperVersion'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"recoverFunds"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function usePrepareRenewalControllerRecoverFunds(
  config: Omit<UsePrepareContractWriteConfig<typeof renewalControllerABI, 'recoverFunds'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'recoverFunds',
    ...config,
  } as UsePrepareContractWriteConfig<typeof renewalControllerABI, 'recoverFunds'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"renew"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function usePrepareRenewalControllerRenew(
  config: Omit<UsePrepareContractWriteConfig<typeof renewalControllerABI, 'renew'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'renew',
    ...config,
  } as UsePrepareContractWriteConfig<typeof renewalControllerABI, 'renew'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"renewWithVersions"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function usePrepareRenewalControllerRenewWithVersions(
  config: Omit<UsePrepareContractWriteConfig<typeof renewalControllerABI, 'renewWithVersions'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'renewWithVersions',
    ...config,
  } as UsePrepareContractWriteConfig<typeof renewalControllerABI, 'renewWithVersions'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function usePrepareRenewalControllerRenounceOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof renewalControllerABI, 'renounceOwnership'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof renewalControllerABI, 'renounceOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"setOwnerCut"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function usePrepareRenewalControllerSetOwnerCut(
  config: Omit<UsePrepareContractWriteConfig<typeof renewalControllerABI, 'setOwnerCut'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'setOwnerCut',
    ...config,
  } as UsePrepareContractWriteConfig<typeof renewalControllerABI, 'setOwnerCut'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"setPricingForAllLengths"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function usePrepareRenewalControllerSetPricingForAllLengths(
  config: Omit<UsePrepareContractWriteConfig<typeof renewalControllerABI, 'setPricingForAllLengths'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'setPricingForAllLengths',
    ...config,
  } as UsePrepareContractWriteConfig<typeof renewalControllerABI, 'setPricingForAllLengths'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"setReferrerCut"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function usePrepareRenewalControllerSetReferrerCut(
  config: Omit<UsePrepareContractWriteConfig<typeof renewalControllerABI, 'setReferrerCut'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'setReferrerCut',
    ...config,
  } as UsePrepareContractWriteConfig<typeof renewalControllerABI, 'setReferrerCut'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function usePrepareRenewalControllerTransferOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof renewalControllerABI, 'transferOwnership'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof renewalControllerABI, 'transferOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"updatePriceForCharLength"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function usePrepareRenewalControllerUpdatePriceForCharLength(
  config: Omit<UsePrepareContractWriteConfig<typeof renewalControllerABI, 'updatePriceForCharLength'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'updatePriceForCharLength',
    ...config,
  } as UsePrepareContractWriteConfig<typeof renewalControllerABI, 'updatePriceForCharLength'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link renewalControllerABI}__ and `functionName` set to `"withdraw"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function usePrepareRenewalControllerWithdraw(
  config: Omit<UsePrepareContractWriteConfig<typeof renewalControllerABI, 'withdraw'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    functionName: 'withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<typeof renewalControllerABI, 'withdraw'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link renewalControllerABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof renewalControllerABI, TEventName>, 'abi' | 'address'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    ...config,
  } as UseContractEventConfig<typeof renewalControllerABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link renewalControllerABI}__ and `eventName` set to `"AddressWithdrew"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerAddressWithdrewEvent(
  config: Omit<UseContractEventConfig<typeof renewalControllerABI, 'AddressWithdrew'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    eventName: 'AddressWithdrew',
    ...config,
  } as UseContractEventConfig<typeof renewalControllerABI, 'AddressWithdrew'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link renewalControllerABI}__ and `eventName` set to `"CharPricesUpdated"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerCharPricesUpdatedEvent(
  config: Omit<UseContractEventConfig<typeof renewalControllerABI, 'CharPricesUpdated'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    eventName: 'CharPricesUpdated',
    ...config,
  } as UseContractEventConfig<typeof renewalControllerABI, 'CharPricesUpdated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link renewalControllerABI}__ and `eventName` set to `"NameRenewed"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerNameRenewedEvent(
  config: Omit<UseContractEventConfig<typeof renewalControllerABI, 'NameRenewed'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    eventName: 'NameRenewed',
    ...config,
  } as UseContractEventConfig<typeof renewalControllerABI, 'NameRenewed'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link renewalControllerABI}__ and `eventName` set to `"NameWrapperVersionUpdated"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerNameWrapperVersionUpdatedEvent(
  config: Omit<UseContractEventConfig<typeof renewalControllerABI, 'NameWrapperVersionUpdated'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    eventName: 'NameWrapperVersionUpdated',
    ...config,
  } as UseContractEventConfig<typeof renewalControllerABI, 'NameWrapperVersionUpdated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link renewalControllerABI}__ and `eventName` set to `"OwnerCutSet"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerOwnerCutSetEvent(
  config: Omit<UseContractEventConfig<typeof renewalControllerABI, 'OwnerCutSet'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    eventName: 'OwnerCutSet',
    ...config,
  } as UseContractEventConfig<typeof renewalControllerABI, 'OwnerCutSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link renewalControllerABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerOwnershipTransferredEvent(
  config: Omit<UseContractEventConfig<typeof renewalControllerABI, 'OwnershipTransferred'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof renewalControllerABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link renewalControllerABI}__ and `eventName` set to `"PriceForCharLengthUpdated"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerPriceForCharLengthUpdatedEvent(
  config: Omit<UseContractEventConfig<typeof renewalControllerABI, 'PriceForCharLengthUpdated'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    eventName: 'PriceForCharLengthUpdated',
    ...config,
  } as UseContractEventConfig<typeof renewalControllerABI, 'PriceForCharLengthUpdated'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link renewalControllerABI}__ and `eventName` set to `"ReferrerCutSet"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerReferrerCutSetEvent(
  config: Omit<UseContractEventConfig<typeof renewalControllerABI, 'ReferrerCutSet'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    eventName: 'ReferrerCutSet',
    ...config,
  } as UseContractEventConfig<typeof renewalControllerABI, 'ReferrerCutSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link renewalControllerABI}__ and `eventName` set to `"SubnameWrapperVersionUpdated"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xa326d1117Eb5F83126589eD5683c2Ec45d75d352)
 * -
 */
export function useRenewalControllerSubnameWrapperVersionUpdatedEvent(
  config: Omit<UseContractEventConfig<typeof renewalControllerABI, 'SubnameWrapperVersionUpdated'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof renewalControllerAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: renewalControllerABI,
    address: renewalControllerAddress[chainId as keyof typeof renewalControllerAddress],
    eventName: 'SubnameWrapperVersionUpdated',
    ...config,
  } as UseContractEventConfig<typeof renewalControllerABI, 'SubnameWrapperVersionUpdated'>)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link subnameRegistrarABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrar(
  config: Omit<UseContractConfig, 'abi' | 'address'> & { chainId?: keyof typeof subnameRegistrarAddress } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContract({ abi: subnameRegistrarABI, address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress], ...config })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameRegistrarABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarRead<TFunctionName extends string, TSelectData = ReadContractResult<typeof subnameRegistrarABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof subnameRegistrarABI, TFunctionName, TSelectData>, 'abi' | 'address'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    ...config,
  } as UseContractReadConfig<typeof subnameRegistrarABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"MIN_REGISTRATION_DURATION"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarMinRegistrationDuration<TSelectData = ReadContractResult<typeof subnameRegistrarABI, 'MIN_REGISTRATION_DURATION'>>(
  config: Omit<UseContractReadConfig<typeof subnameRegistrarABI, 'MIN_REGISTRATION_DURATION', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'MIN_REGISTRATION_DURATION',
    ...config,
  } as UseContractReadConfig<typeof subnameRegistrarABI, 'MIN_REGISTRATION_DURATION', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"available"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarAvailable<TSelectData = ReadContractResult<typeof subnameRegistrarABI, 'available'>>(
  config: Omit<UseContractReadConfig<typeof subnameRegistrarABI, 'available', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'available',
    ...config,
  } as UseContractReadConfig<typeof subnameRegistrarABI, 'available', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"balances"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarBalances<TSelectData = ReadContractResult<typeof subnameRegistrarABI, 'balances'>>(
  config: Omit<UseContractReadConfig<typeof subnameRegistrarABI, 'balances', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'balances',
    ...config,
  } as UseContractReadConfig<typeof subnameRegistrarABI, 'balances', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"commitments"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarCommitments<TSelectData = ReadContractResult<typeof subnameRegistrarABI, 'commitments'>>(
  config: Omit<UseContractReadConfig<typeof subnameRegistrarABI, 'commitments', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'commitments',
    ...config,
  } as UseContractReadConfig<typeof subnameRegistrarABI, 'commitments', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"ens"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarEns<TSelectData = ReadContractResult<typeof subnameRegistrarABI, 'ens'>>(
  config: Omit<UseContractReadConfig<typeof subnameRegistrarABI, 'ens', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'ens',
    ...config,
  } as UseContractReadConfig<typeof subnameRegistrarABI, 'ens', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"getLastCharIndex"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarGetLastCharIndex<TSelectData = ReadContractResult<typeof subnameRegistrarABI, 'getLastCharIndex'>>(
  config: Omit<UseContractReadConfig<typeof subnameRegistrarABI, 'getLastCharIndex', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'getLastCharIndex',
    ...config,
  } as UseContractReadConfig<typeof subnameRegistrarABI, 'getLastCharIndex', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"getPriceDataForLength"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarGetPriceDataForLength<TSelectData = ReadContractResult<typeof subnameRegistrarABI, 'getPriceDataForLength'>>(
  config: Omit<UseContractReadConfig<typeof subnameRegistrarABI, 'getPriceDataForLength', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'getPriceDataForLength',
    ...config,
  } as UseContractReadConfig<typeof subnameRegistrarABI, 'getPriceDataForLength', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"makeCommitment"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarMakeCommitment<TSelectData = ReadContractResult<typeof subnameRegistrarABI, 'makeCommitment'>>(
  config: Omit<UseContractReadConfig<typeof subnameRegistrarABI, 'makeCommitment', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'makeCommitment',
    ...config,
  } as UseContractReadConfig<typeof subnameRegistrarABI, 'makeCommitment', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"maxCommitmentAge"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarMaxCommitmentAge<TSelectData = ReadContractResult<typeof subnameRegistrarABI, 'maxCommitmentAge'>>(
  config: Omit<UseContractReadConfig<typeof subnameRegistrarABI, 'maxCommitmentAge', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'maxCommitmentAge',
    ...config,
  } as UseContractReadConfig<typeof subnameRegistrarABI, 'maxCommitmentAge', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"minCommitmentAge"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarMinCommitmentAge<TSelectData = ReadContractResult<typeof subnameRegistrarABI, 'minCommitmentAge'>>(
  config: Omit<UseContractReadConfig<typeof subnameRegistrarABI, 'minCommitmentAge', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'minCommitmentAge',
    ...config,
  } as UseContractReadConfig<typeof subnameRegistrarABI, 'minCommitmentAge', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"nameWrapper"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarNameWrapper<TSelectData = ReadContractResult<typeof subnameRegistrarABI, 'nameWrapper'>>(
  config: Omit<UseContractReadConfig<typeof subnameRegistrarABI, 'nameWrapper', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'nameWrapper',
    ...config,
  } as UseContractReadConfig<typeof subnameRegistrarABI, 'nameWrapper', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"owner"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarOwner<TSelectData = ReadContractResult<typeof subnameRegistrarABI, 'owner'>>(
  config: Omit<UseContractReadConfig<typeof subnameRegistrarABI, 'owner', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof subnameRegistrarABI, 'owner', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"ownerCut"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarOwnerCut<TSelectData = ReadContractResult<typeof subnameRegistrarABI, 'ownerCut'>>(
  config: Omit<UseContractReadConfig<typeof subnameRegistrarABI, 'ownerCut', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'ownerCut',
    ...config,
  } as UseContractReadConfig<typeof subnameRegistrarABI, 'ownerCut', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"pricingData"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarPricingData<TSelectData = ReadContractResult<typeof subnameRegistrarABI, 'pricingData'>>(
  config: Omit<UseContractReadConfig<typeof subnameRegistrarABI, 'pricingData', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'pricingData',
    ...config,
  } as UseContractReadConfig<typeof subnameRegistrarABI, 'pricingData', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"referrerCuts"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarReferrerCuts<TSelectData = ReadContractResult<typeof subnameRegistrarABI, 'referrerCuts'>>(
  config: Omit<UseContractReadConfig<typeof subnameRegistrarABI, 'referrerCuts', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'referrerCuts',
    ...config,
  } as UseContractReadConfig<typeof subnameRegistrarABI, 'referrerCuts', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"rentPrice"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarRentPrice<TSelectData = ReadContractResult<typeof subnameRegistrarABI, 'rentPrice'>>(
  config: Omit<UseContractReadConfig<typeof subnameRegistrarABI, 'rentPrice', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'rentPrice',
    ...config,
  } as UseContractReadConfig<typeof subnameRegistrarABI, 'rentPrice', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"subnameWrapper"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarSubnameWrapper<TSelectData = ReadContractResult<typeof subnameRegistrarABI, 'subnameWrapper'>>(
  config: Omit<UseContractReadConfig<typeof subnameRegistrarABI, 'subnameWrapper', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'subnameWrapper',
    ...config,
  } as UseContractReadConfig<typeof subnameRegistrarABI, 'subnameWrapper', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarSupportsInterface<TSelectData = ReadContractResult<typeof subnameRegistrarABI, 'supportsInterface'>>(
  config: Omit<UseContractReadConfig<typeof subnameRegistrarABI, 'supportsInterface', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<typeof subnameRegistrarABI, 'supportsInterface', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"totalBalance"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarTotalBalance<TSelectData = ReadContractResult<typeof subnameRegistrarABI, 'totalBalance'>>(
  config: Omit<UseContractReadConfig<typeof subnameRegistrarABI, 'totalBalance', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'totalBalance',
    ...config,
  } as UseContractReadConfig<typeof subnameRegistrarABI, 'totalBalance', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"usdOracle"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarUsdOracle<TSelectData = ReadContractResult<typeof subnameRegistrarABI, 'usdOracle'>>(
  config: Omit<UseContractReadConfig<typeof subnameRegistrarABI, 'usdOracle', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'usdOracle',
    ...config,
  } as UseContractReadConfig<typeof subnameRegistrarABI, 'usdOracle', TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof subnameRegistrarAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameRegistrarABI, string>['abi'], TFunctionName> & {
        address?: Address
        chainId?: TChainId
      }
    : UseContractWriteConfig<TMode, typeof subnameRegistrarABI, TFunctionName> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameRegistrarABI, TFunctionName>({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"addNextPriceForCharLength"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarAddNextPriceForCharLength<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof subnameRegistrarAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof subnameRegistrarABI, 'addNextPriceForCharLength'>['abi'],
        'addNextPriceForCharLength'
      > & { address?: Address; chainId?: TChainId; functionName?: 'addNextPriceForCharLength' }
    : UseContractWriteConfig<TMode, typeof subnameRegistrarABI, 'addNextPriceForCharLength'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'addNextPriceForCharLength'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameRegistrarABI, 'addNextPriceForCharLength'>({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'addNextPriceForCharLength',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"commit"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarCommit<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameRegistrarAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameRegistrarABI, 'commit'>['abi'], 'commit'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'commit'
      }
    : UseContractWriteConfig<TMode, typeof subnameRegistrarABI, 'commit'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'commit'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameRegistrarABI, 'commit'>({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'commit',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"recoverFunds"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarRecoverFunds<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameRegistrarAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameRegistrarABI, 'recoverFunds'>['abi'], 'recoverFunds'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'recoverFunds'
      }
    : UseContractWriteConfig<TMode, typeof subnameRegistrarABI, 'recoverFunds'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'recoverFunds'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameRegistrarABI, 'recoverFunds'>({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'recoverFunds',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"register"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarRegister<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameRegistrarAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameRegistrarABI, 'register'>['abi'], 'register'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'register'
      }
    : UseContractWriteConfig<TMode, typeof subnameRegistrarABI, 'register'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'register'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameRegistrarABI, 'register'>({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'register',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarRenounceOwnership<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameRegistrarAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameRegistrarABI, 'renounceOwnership'>['abi'], 'renounceOwnership'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<TMode, typeof subnameRegistrarABI, 'renounceOwnership'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameRegistrarABI, 'renounceOwnership'>({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"setOfferSubnames"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarSetOfferSubnames<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameRegistrarAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameRegistrarABI, 'setOfferSubnames'>['abi'], 'setOfferSubnames'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setOfferSubnames'
      }
    : UseContractWriteConfig<TMode, typeof subnameRegistrarABI, 'setOfferSubnames'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setOfferSubnames'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameRegistrarABI, 'setOfferSubnames'>({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'setOfferSubnames',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"setOwnerCut"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarSetOwnerCut<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameRegistrarAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameRegistrarABI, 'setOwnerCut'>['abi'], 'setOwnerCut'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setOwnerCut'
      }
    : UseContractWriteConfig<TMode, typeof subnameRegistrarABI, 'setOwnerCut'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setOwnerCut'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameRegistrarABI, 'setOwnerCut'>({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'setOwnerCut',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"setParams"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarSetParams<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameRegistrarAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameRegistrarABI, 'setParams'>['abi'], 'setParams'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setParams'
      }
    : UseContractWriteConfig<TMode, typeof subnameRegistrarABI, 'setParams'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setParams'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameRegistrarABI, 'setParams'>({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'setParams',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"setPricingForAllLengths"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarSetPricingForAllLengths<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof subnameRegistrarAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof subnameRegistrarABI, 'setPricingForAllLengths'>['abi'],
        'setPricingForAllLengths'
      > & { address?: Address; chainId?: TChainId; functionName?: 'setPricingForAllLengths' }
    : UseContractWriteConfig<TMode, typeof subnameRegistrarABI, 'setPricingForAllLengths'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setPricingForAllLengths'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameRegistrarABI, 'setPricingForAllLengths'>({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'setPricingForAllLengths',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"setReferrerCut"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarSetReferrerCut<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameRegistrarAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameRegistrarABI, 'setReferrerCut'>['abi'], 'setReferrerCut'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setReferrerCut'
      }
    : UseContractWriteConfig<TMode, typeof subnameRegistrarABI, 'setReferrerCut'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setReferrerCut'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameRegistrarABI, 'setReferrerCut'>({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'setReferrerCut',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarTransferOwnership<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameRegistrarAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameRegistrarABI, 'transferOwnership'>['abi'], 'transferOwnership'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<TMode, typeof subnameRegistrarABI, 'transferOwnership'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameRegistrarABI, 'transferOwnership'>({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"updatePriceForCharLength"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarUpdatePriceForCharLength<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof subnameRegistrarAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof subnameRegistrarABI, 'updatePriceForCharLength'>['abi'],
        'updatePriceForCharLength'
      > & { address?: Address; chainId?: TChainId; functionName?: 'updatePriceForCharLength' }
    : UseContractWriteConfig<TMode, typeof subnameRegistrarABI, 'updatePriceForCharLength'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'updatePriceForCharLength'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameRegistrarABI, 'updatePriceForCharLength'>({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'updatePriceForCharLength',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"withdraw"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarWithdraw<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameRegistrarAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameRegistrarABI, 'withdraw'>['abi'], 'withdraw'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'withdraw'
      }
    : UseContractWriteConfig<TMode, typeof subnameRegistrarABI, 'withdraw'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'withdraw'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameRegistrarABI, 'withdraw'>({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'withdraw',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function usePrepareSubnameRegistrarWrite<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameRegistrarABI, TFunctionName>, 'abi' | 'address'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameRegistrarABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"addNextPriceForCharLength"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function usePrepareSubnameRegistrarAddNextPriceForCharLength(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'addNextPriceForCharLength'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'addNextPriceForCharLength',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'addNextPriceForCharLength'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"commit"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function usePrepareSubnameRegistrarCommit(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'commit'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'commit',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'commit'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"recoverFunds"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function usePrepareSubnameRegistrarRecoverFunds(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'recoverFunds'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'recoverFunds',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'recoverFunds'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"register"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function usePrepareSubnameRegistrarRegister(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'register'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'register',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'register'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function usePrepareSubnameRegistrarRenounceOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'renounceOwnership'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'renounceOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"setOfferSubnames"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function usePrepareSubnameRegistrarSetOfferSubnames(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'setOfferSubnames'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'setOfferSubnames',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'setOfferSubnames'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"setOwnerCut"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function usePrepareSubnameRegistrarSetOwnerCut(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'setOwnerCut'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'setOwnerCut',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'setOwnerCut'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"setParams"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function usePrepareSubnameRegistrarSetParams(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'setParams'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'setParams',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'setParams'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"setPricingForAllLengths"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function usePrepareSubnameRegistrarSetPricingForAllLengths(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'setPricingForAllLengths'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'setPricingForAllLengths',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'setPricingForAllLengths'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"setReferrerCut"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function usePrepareSubnameRegistrarSetReferrerCut(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'setReferrerCut'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'setReferrerCut',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'setReferrerCut'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function usePrepareSubnameRegistrarTransferOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'transferOwnership'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'transferOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"updatePriceForCharLength"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function usePrepareSubnameRegistrarUpdatePriceForCharLength(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'updatePriceForCharLength'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'updatePriceForCharLength',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'updatePriceForCharLength'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameRegistrarABI}__ and `functionName` set to `"withdraw"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function usePrepareSubnameRegistrarWithdraw(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'withdraw'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    functionName: 'withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameRegistrarABI, 'withdraw'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link subnameRegistrarABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof subnameRegistrarABI, TEventName>, 'abi' | 'address'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    ...config,
  } as UseContractEventConfig<typeof subnameRegistrarABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link subnameRegistrarABI}__ and `eventName` set to `"AddressWithdrew"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarAddressWithdrewEvent(
  config: Omit<UseContractEventConfig<typeof subnameRegistrarABI, 'AddressWithdrew'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    eventName: 'AddressWithdrew',
    ...config,
  } as UseContractEventConfig<typeof subnameRegistrarABI, 'AddressWithdrew'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link subnameRegistrarABI}__ and `eventName` set to `"NameRenewed"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarNameRenewedEvent(
  config: Omit<UseContractEventConfig<typeof subnameRegistrarABI, 'NameRenewed'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    eventName: 'NameRenewed',
    ...config,
  } as UseContractEventConfig<typeof subnameRegistrarABI, 'NameRenewed'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link subnameRegistrarABI}__ and `eventName` set to `"OwnerCutSet"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarOwnerCutSetEvent(
  config: Omit<UseContractEventConfig<typeof subnameRegistrarABI, 'OwnerCutSet'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    eventName: 'OwnerCutSet',
    ...config,
  } as UseContractEventConfig<typeof subnameRegistrarABI, 'OwnerCutSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link subnameRegistrarABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarOwnershipTransferredEvent(
  config: Omit<UseContractEventConfig<typeof subnameRegistrarABI, 'OwnershipTransferred'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof subnameRegistrarABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link subnameRegistrarABI}__ and `eventName` set to `"ReferrerCutSet"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarReferrerCutSetEvent(
  config: Omit<UseContractEventConfig<typeof subnameRegistrarABI, 'ReferrerCutSet'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    eventName: 'ReferrerCutSet',
    ...config,
  } as UseContractEventConfig<typeof subnameRegistrarABI, 'ReferrerCutSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link subnameRegistrarABI}__ and `eventName` set to `"SubnameRegistered"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbbf178ef94694d18dcabd5ebc2e1d4152f96b110)
 * -
 */
export function useSubnameRegistrarSubnameRegisteredEvent(
  config: Omit<UseContractEventConfig<typeof subnameRegistrarABI, 'SubnameRegistered'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof subnameRegistrarAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: subnameRegistrarABI,
    address: subnameRegistrarAddress[chainId as keyof typeof subnameRegistrarAddress],
    eventName: 'SubnameRegistered',
    ...config,
  } as UseContractEventConfig<typeof subnameRegistrarABI, 'SubnameRegistered'>)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link subnameWrapperABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapper(config: Omit<UseContractConfig, 'abi' | 'address'> & { chainId?: keyof typeof subnameWrapperAddress } = {} as any) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContract({ abi: subnameWrapperABI, address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress], ...config })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameWrapperABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperRead<TFunctionName extends string, TSelectData = ReadContractResult<typeof subnameWrapperABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof subnameWrapperABI, TFunctionName, TSelectData>, 'abi' | 'address'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    ...config,
  } as UseContractReadConfig<typeof subnameWrapperABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"_tokens"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperTokens<TSelectData = ReadContractResult<typeof subnameWrapperABI, '_tokens'>>(
  config: Omit<UseContractReadConfig<typeof subnameWrapperABI, '_tokens', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: '_tokens',
    ...config,
  } as UseContractReadConfig<typeof subnameWrapperABI, '_tokens', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"balanceOf"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperBalanceOf<TSelectData = ReadContractResult<typeof subnameWrapperABI, 'balanceOf'>>(
  config: Omit<UseContractReadConfig<typeof subnameWrapperABI, 'balanceOf', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof subnameWrapperABI, 'balanceOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"balanceOfBatch"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperBalanceOfBatch<TSelectData = ReadContractResult<typeof subnameWrapperABI, 'balanceOfBatch'>>(
  config: Omit<UseContractReadConfig<typeof subnameWrapperABI, 'balanceOfBatch', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'balanceOfBatch',
    ...config,
  } as UseContractReadConfig<typeof subnameWrapperABI, 'balanceOfBatch', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"canModifyName"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperCanModifyName<TSelectData = ReadContractResult<typeof subnameWrapperABI, 'canModifyName'>>(
  config: Omit<UseContractReadConfig<typeof subnameWrapperABI, 'canModifyName', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'canModifyName',
    ...config,
  } as UseContractReadConfig<typeof subnameWrapperABI, 'canModifyName', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"controllers"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperControllers<TSelectData = ReadContractResult<typeof subnameWrapperABI, 'controllers'>>(
  config: Omit<UseContractReadConfig<typeof subnameWrapperABI, 'controllers', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'controllers',
    ...config,
  } as UseContractReadConfig<typeof subnameWrapperABI, 'controllers', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"ens"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperEns<TSelectData = ReadContractResult<typeof subnameWrapperABI, 'ens'>>(
  config: Omit<UseContractReadConfig<typeof subnameWrapperABI, 'ens', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'ens',
    ...config,
  } as UseContractReadConfig<typeof subnameWrapperABI, 'ens', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"getData"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperGetData<TSelectData = ReadContractResult<typeof subnameWrapperABI, 'getData'>>(
  config: Omit<UseContractReadConfig<typeof subnameWrapperABI, 'getData', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'getData',
    ...config,
  } as UseContractReadConfig<typeof subnameWrapperABI, 'getData', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperIsApprovedForAll<TSelectData = ReadContractResult<typeof subnameWrapperABI, 'isApprovedForAll'>>(
  config: Omit<UseContractReadConfig<typeof subnameWrapperABI, 'isApprovedForAll', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<typeof subnameWrapperABI, 'isApprovedForAll', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"isWrapped"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperIsWrapped<TSelectData = ReadContractResult<typeof subnameWrapperABI, 'isWrapped'>>(
  config: Omit<UseContractReadConfig<typeof subnameWrapperABI, 'isWrapped', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'isWrapped',
    ...config,
  } as UseContractReadConfig<typeof subnameWrapperABI, 'isWrapped', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"metadataService"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperMetadataService<TSelectData = ReadContractResult<typeof subnameWrapperABI, 'metadataService'>>(
  config: Omit<UseContractReadConfig<typeof subnameWrapperABI, 'metadataService', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'metadataService',
    ...config,
  } as UseContractReadConfig<typeof subnameWrapperABI, 'metadataService', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"name"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperName<TSelectData = ReadContractResult<typeof subnameWrapperABI, 'name'>>(
  config: Omit<UseContractReadConfig<typeof subnameWrapperABI, 'name', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof subnameWrapperABI, 'name', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"nameWrapper"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperNameWrapper<TSelectData = ReadContractResult<typeof subnameWrapperABI, 'nameWrapper'>>(
  config: Omit<UseContractReadConfig<typeof subnameWrapperABI, 'nameWrapper', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'nameWrapper',
    ...config,
  } as UseContractReadConfig<typeof subnameWrapperABI, 'nameWrapper', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"onERC1155BatchReceived"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperOnErc1155BatchReceived<TSelectData = ReadContractResult<typeof subnameWrapperABI, 'onERC1155BatchReceived'>>(
  config: Omit<UseContractReadConfig<typeof subnameWrapperABI, 'onERC1155BatchReceived', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'onERC1155BatchReceived',
    ...config,
  } as UseContractReadConfig<typeof subnameWrapperABI, 'onERC1155BatchReceived', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"onERC1155Received"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperOnErc1155Received<TSelectData = ReadContractResult<typeof subnameWrapperABI, 'onERC1155Received'>>(
  config: Omit<UseContractReadConfig<typeof subnameWrapperABI, 'onERC1155Received', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'onERC1155Received',
    ...config,
  } as UseContractReadConfig<typeof subnameWrapperABI, 'onERC1155Received', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"owner"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperOwner<TSelectData = ReadContractResult<typeof subnameWrapperABI, 'owner'>>(
  config: Omit<UseContractReadConfig<typeof subnameWrapperABI, 'owner', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof subnameWrapperABI, 'owner', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"ownerOf"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperOwnerOf<TSelectData = ReadContractResult<typeof subnameWrapperABI, 'ownerOf'>>(
  config: Omit<UseContractReadConfig<typeof subnameWrapperABI, 'ownerOf', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<typeof subnameWrapperABI, 'ownerOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"publicResolver"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperPublicResolver<TSelectData = ReadContractResult<typeof subnameWrapperABI, 'publicResolver'>>(
  config: Omit<UseContractReadConfig<typeof subnameWrapperABI, 'publicResolver', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'publicResolver',
    ...config,
  } as UseContractReadConfig<typeof subnameWrapperABI, 'publicResolver', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperSupportsInterface<TSelectData = ReadContractResult<typeof subnameWrapperABI, 'supportsInterface'>>(
  config: Omit<UseContractReadConfig<typeof subnameWrapperABI, 'supportsInterface', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<typeof subnameWrapperABI, 'supportsInterface', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"upgradeContract"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperUpgradeContract<TSelectData = ReadContractResult<typeof subnameWrapperABI, 'upgradeContract'>>(
  config: Omit<UseContractReadConfig<typeof subnameWrapperABI, 'upgradeContract', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'upgradeContract',
    ...config,
  } as UseContractReadConfig<typeof subnameWrapperABI, 'upgradeContract', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"uri"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperUri<TSelectData = ReadContractResult<typeof subnameWrapperABI, 'uri'>>(
  config: Omit<UseContractReadConfig<typeof subnameWrapperABI, 'uri', TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'uri',
    ...config,
  } as UseContractReadConfig<typeof subnameWrapperABI, 'uri', TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof subnameWrapperAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, string>['abi'], TFunctionName> & {
        address?: Address
        chainId?: TChainId
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, TFunctionName> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, TFunctionName>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"extendExpiry"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperExtendExpiry<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, 'extendExpiry'>['abi'], 'extendExpiry'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'extendExpiry'
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'extendExpiry'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'extendExpiry'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'extendExpiry'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'extendExpiry',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"recoverFunds"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperRecoverFunds<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, 'recoverFunds'>['abi'], 'recoverFunds'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'recoverFunds'
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'recoverFunds'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'recoverFunds'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'recoverFunds'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'recoverFunds',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"registerAndWrap"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperRegisterAndWrap<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, 'registerAndWrap'>['abi'], 'registerAndWrap'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'registerAndWrap'
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'registerAndWrap'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'registerAndWrap'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'registerAndWrap'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'registerAndWrap',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperRenounceOwnership<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, 'renounceOwnership'>['abi'], 'renounceOwnership'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'renounceOwnership'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'renounceOwnership'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"safeBatchTransferFrom"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperSafeBatchTransferFrom<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, 'safeBatchTransferFrom'>['abi'], 'safeBatchTransferFrom'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'safeBatchTransferFrom'
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'safeBatchTransferFrom'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'safeBatchTransferFrom'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'safeBatchTransferFrom'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'safeBatchTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperSafeTransferFrom<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, 'safeTransferFrom'>['abi'], 'safeTransferFrom'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'safeTransferFrom'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'safeTransferFrom'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperSetApprovalForAll<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, 'setApprovalForAll'>['abi'], 'setApprovalForAll'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'setApprovalForAll'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'setApprovalForAll'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setChildFuses"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperSetChildFuses<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, 'setChildFuses'>['abi'], 'setChildFuses'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setChildFuses'
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'setChildFuses'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setChildFuses'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'setChildFuses'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setChildFuses',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setController"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperSetController<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, 'setController'>['abi'], 'setController'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setController'
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'setController'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setController'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'setController'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setController',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setDelegateInPublicResolver"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperSetDelegateInPublicResolver<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof subnameWrapperAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof subnameWrapperABI, 'setDelegateInPublicResolver'>['abi'],
        'setDelegateInPublicResolver'
      > & { address?: Address; chainId?: TChainId; functionName?: 'setDelegateInPublicResolver' }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'setDelegateInPublicResolver'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setDelegateInPublicResolver'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'setDelegateInPublicResolver'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setDelegateInPublicResolver',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setFuses"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperSetFuses<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, 'setFuses'>['abi'], 'setFuses'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setFuses'
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'setFuses'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setFuses'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'setFuses'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setFuses',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setMetadataService"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperSetMetadataService<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, 'setMetadataService'>['abi'], 'setMetadataService'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setMetadataService'
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'setMetadataService'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setMetadataService'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'setMetadataService'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setMetadataService',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setPublicResolver"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperSetPublicResolver<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, 'setPublicResolver'>['abi'], 'setPublicResolver'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setPublicResolver'
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'setPublicResolver'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setPublicResolver'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'setPublicResolver'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setPublicResolver',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setRecord"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperSetRecord<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, 'setRecord'>['abi'], 'setRecord'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setRecord'
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'setRecord'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setRecord'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'setRecord'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setRecord',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setResolver"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperSetResolver<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, 'setResolver'>['abi'], 'setResolver'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setResolver'
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'setResolver'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setResolver'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'setResolver'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setResolver',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setSubnodeOwner"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperSetSubnodeOwner<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, 'setSubnodeOwner'>['abi'], 'setSubnodeOwner'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setSubnodeOwner'
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'setSubnodeOwner'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setSubnodeOwner'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'setSubnodeOwner'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setSubnodeOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setSubnodeRecord"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperSetSubnodeRecord<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, 'setSubnodeRecord'>['abi'], 'setSubnodeRecord'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setSubnodeRecord'
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'setSubnodeRecord'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setSubnodeRecord'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'setSubnodeRecord'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setSubnodeRecord',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setTTL"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperSetTtl<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, 'setTTL'>['abi'], 'setTTL'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setTTL'
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'setTTL'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setTTL'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'setTTL'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setTTL',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setUpgradeContract"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperSetUpgradeContract<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, 'setUpgradeContract'>['abi'], 'setUpgradeContract'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setUpgradeContract'
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'setUpgradeContract'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setUpgradeContract'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'setUpgradeContract'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setUpgradeContract',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperTransferOwnership<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, 'transferOwnership'>['abi'], 'transferOwnership'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'transferOwnership'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'transferOwnership'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"upgrade"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperUpgrade<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, 'upgrade'>['abi'], 'upgrade'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'upgrade'
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'upgrade'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'upgrade'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'upgrade'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'upgrade',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"wrap"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperWrap<TMode extends WriteContractMode, TChainId extends number = keyof typeof subnameWrapperAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof subnameWrapperABI, 'wrap'>['abi'], 'wrap'> & {
        address?: Address
        chainId?: TChainId
        functionName?: 'wrap'
      }
    : UseContractWriteConfig<TMode, typeof subnameWrapperABI, 'wrap'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'wrap'
      } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof subnameWrapperABI, 'wrap'>({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'wrap',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperWrite<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, TFunctionName>, 'abi' | 'address'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"extendExpiry"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperExtendExpiry(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'extendExpiry'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'extendExpiry',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'extendExpiry'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"recoverFunds"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperRecoverFunds(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'recoverFunds'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'recoverFunds',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'recoverFunds'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"registerAndWrap"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperRegisterAndWrap(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'registerAndWrap'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'registerAndWrap',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'registerAndWrap'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperRenounceOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'renounceOwnership'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'renounceOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"safeBatchTransferFrom"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperSafeBatchTransferFrom(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'safeBatchTransferFrom'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'safeBatchTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'safeBatchTransferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperSafeTransferFrom(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'safeTransferFrom'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'safeTransferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperSetApprovalForAll(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setApprovalForAll'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setApprovalForAll'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setChildFuses"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperSetChildFuses(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setChildFuses'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setChildFuses',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setChildFuses'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setController"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperSetController(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setController'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setController',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setController'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setDelegateInPublicResolver"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperSetDelegateInPublicResolver(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setDelegateInPublicResolver'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setDelegateInPublicResolver',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setDelegateInPublicResolver'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setFuses"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperSetFuses(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setFuses'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setFuses',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setFuses'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setMetadataService"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperSetMetadataService(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setMetadataService'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setMetadataService',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setMetadataService'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setPublicResolver"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperSetPublicResolver(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setPublicResolver'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setPublicResolver',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setPublicResolver'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setRecord"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperSetRecord(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setRecord'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setRecord',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setRecord'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setResolver"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperSetResolver(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setResolver'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setResolver',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setResolver'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setSubnodeOwner"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperSetSubnodeOwner(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setSubnodeOwner'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setSubnodeOwner',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setSubnodeOwner'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setSubnodeRecord"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperSetSubnodeRecord(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setSubnodeRecord'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setSubnodeRecord',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setSubnodeRecord'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setTTL"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperSetTtl(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setTTL'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setTTL',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setTTL'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"setUpgradeContract"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperSetUpgradeContract(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setUpgradeContract'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'setUpgradeContract',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'setUpgradeContract'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperTransferOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'transferOwnership'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'transferOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"upgrade"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperUpgrade(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'upgrade'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'upgrade',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'upgrade'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link subnameWrapperABI}__ and `functionName` set to `"wrap"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function usePrepareSubnameWrapperWrap(
  config: Omit<UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'wrap'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    functionName: 'wrap',
    ...config,
  } as UsePrepareContractWriteConfig<typeof subnameWrapperABI, 'wrap'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link subnameWrapperABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof subnameWrapperABI, TEventName>, 'abi' | 'address'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    ...config,
  } as UseContractEventConfig<typeof subnameWrapperABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link subnameWrapperABI}__ and `eventName` set to `"ApprovalForAll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperApprovalForAllEvent(
  config: Omit<UseContractEventConfig<typeof subnameWrapperABI, 'ApprovalForAll'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<typeof subnameWrapperABI, 'ApprovalForAll'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link subnameWrapperABI}__ and `eventName` set to `"ControllerChanged"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperControllerChangedEvent(
  config: Omit<UseContractEventConfig<typeof subnameWrapperABI, 'ControllerChanged'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    eventName: 'ControllerChanged',
    ...config,
  } as UseContractEventConfig<typeof subnameWrapperABI, 'ControllerChanged'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link subnameWrapperABI}__ and `eventName` set to `"DelegationSetInPublicResolver"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperDelegationSetInPublicResolverEvent(
  config: Omit<UseContractEventConfig<typeof subnameWrapperABI, 'DelegationSetInPublicResolver'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    eventName: 'DelegationSetInPublicResolver',
    ...config,
  } as UseContractEventConfig<typeof subnameWrapperABI, 'DelegationSetInPublicResolver'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link subnameWrapperABI}__ and `eventName` set to `"ExtendExpiry"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperExtendExpiryEvent(
  config: Omit<UseContractEventConfig<typeof subnameWrapperABI, 'ExtendExpiry'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    eventName: 'ExtendExpiry',
    ...config,
  } as UseContractEventConfig<typeof subnameWrapperABI, 'ExtendExpiry'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link subnameWrapperABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperOwnershipTransferredEvent(
  config: Omit<UseContractEventConfig<typeof subnameWrapperABI, 'OwnershipTransferred'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof subnameWrapperABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link subnameWrapperABI}__ and `eventName` set to `"SubnameWrapped"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperSubnameWrappedEvent(
  config: Omit<UseContractEventConfig<typeof subnameWrapperABI, 'SubnameWrapped'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    eventName: 'SubnameWrapped',
    ...config,
  } as UseContractEventConfig<typeof subnameWrapperABI, 'SubnameWrapped'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link subnameWrapperABI}__ and `eventName` set to `"TransferBatch"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperTransferBatchEvent(
  config: Omit<UseContractEventConfig<typeof subnameWrapperABI, 'TransferBatch'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    eventName: 'TransferBatch',
    ...config,
  } as UseContractEventConfig<typeof subnameWrapperABI, 'TransferBatch'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link subnameWrapperABI}__ and `eventName` set to `"TransferSingle"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperTransferSingleEvent(
  config: Omit<UseContractEventConfig<typeof subnameWrapperABI, 'TransferSingle'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    eventName: 'TransferSingle',
    ...config,
  } as UseContractEventConfig<typeof subnameWrapperABI, 'TransferSingle'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link subnameWrapperABI}__ and `eventName` set to `"URI"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x467e32AF4BA47CcC47ac383922E41EF725Dad37B)
 * -
 */
export function useSubnameWrapperUriEvent(
  config: Omit<UseContractEventConfig<typeof subnameWrapperABI, 'URI'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof subnameWrapperAddress
  } = {} as any
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractEvent({
    abi: subnameWrapperABI,
    address: subnameWrapperAddress[chainId as keyof typeof subnameWrapperAddress],
    eventName: 'URI',
    ...config,
  } as UseContractEventConfig<typeof subnameWrapperABI, 'URI'>)
}
